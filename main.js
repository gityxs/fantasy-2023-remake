/*















警告：
==W9School鉴定==
这篇代码的缩进质量是1/100 模块化质量5/100，总质量为 》》》恶劣《《《

查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！

查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
查看这份代码将会导致你*不可逆*的视觉障碍，视觉疲劳，甚至记忆力衰退、休克、猝死！
你确定要继续吗？
你已经被警告过了！！你已经被警告过了！！你已经被警告过了！！
你已经被警告过了！！你已经被警告过了！！你已经被警告过了！！
你已经被警告过了！！你已经被警告过了！！你已经被警告过了！！
你已经被警告过了！！你已经被警告过了！！你已经被警告过了！！
你已经被警告过了！！你已经被警告过了！！你已经被警告过了！！
你已经被警告过了！！你已经被警告过了！！你已经被警告过了！！


















你真的确定要继续吗？


















你真的真的真的确定要继续吗？

































你真的真的真的确定要继续吗？











看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！

看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
看到这里的快退出！快退出！听我一句劝！！！
















===============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数10000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000hf=====================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现=========================================================检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================

===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现=========================================================检测到致盲危险出现==========================================

===============检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现=========================================================检测到致盲危险出现==========================================
===============检测到致盲危险出现=========================================================检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================

===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================

===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================

===============检测到致盲危险出现==========================================
===============检测到致盲危险出现==========================================
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000hf=====================
===============检测到致盲危险出现==========================================
==============前方危险地带！前方危险地带！前方危险地带！=================
===============危险指数1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000hf=====================
===============检测到极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端极端致盲危险出现==========================================
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️☢️
*/

(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = global || self, global.Decimal = factory());
  }(this, function () { 'use strict';
  
    var padEnd = function (string, maxLength, fillString) {
  
      if (string === null || maxLength === null) {
        return string;
      }
  
      var result    = String(string);
      var targetLen = typeof maxLength === 'number'
        ? maxLength
        : parseInt(maxLength, 10);
  
      if (isNaN(targetLen) || !isFinite(targetLen)) {
        return result;
      }
  
  
      var length = result.length;
      if (length >= targetLen) {
        return result;
      }
  
  
      var filled = fillString === null ? '' : String(fillString);
      if (filled === '') {
        filled = ' ';
      }
  
  
      var fillLen = targetLen - length;
  
      while (filled.length < fillLen) {
        filled += filled;
      }
  
      var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;
  
      return result + truncated;
    };
  
    var MAX_SIGNIFICANT_DIGITS = 17; //Maximum number of digits of precision to assume in Number
  
    var EXP_LIMIT = 9e15; //If we're ABOVE this value, increase a layer. (9e15 is close to the largest integer that can fit in a Number.)
    
    var LAYER_DOWN = Math.log10(9e15); //If we're BELOW this value, drop down a layer. About 15.954.
    
    var FIRST_NEG_LAYER = 1/9e15; //At layer 0, smaller non-zero numbers than this become layer 1 numbers with negative mag. After that the pattern continues as normal.
  
    var NUMBER_EXP_MAX = 308; //The largest exponent that can appear in a Number, though not all mantissas are valid here.
  
    var NUMBER_EXP_MIN = -324; //The smallest exponent that can appear in a Number, though not all mantissas are valid here.
    
    var MAX_ES_IN_A_ROW = 5; //For default toString behaviour, when to swap from eee... to (e^n) syntax.

    var powerOf10 = function () {
      // We need this lookup table because Math.pow(10, exponent)
      // when exponent's absolute value is large is slightly inaccurate.
      // You can fix it with the power of math... or just make a lookup table.
      // Faster AND simpler
      var powersOf10 = [];
  
      for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {
        powersOf10.push(Number("1e" + i));
      }
  
      var indexOf0InPowersOf10 = 323;
      return function (power) {
        return powersOf10[power + indexOf0InPowersOf10];
      };
    }();
  
    var D = function D(value) {
      return Decimal.fromValue_noAlloc(value);
    };
  
    var FC = function FC(sign, layer, mag) {
      return Decimal.fromComponents(sign, layer, mag);
    };
  
    var FC_NN = function FC_NN(sign, layer, mag) {
      return Decimal.fromComponents_noNormalize(sign, layer, mag);
    };
    
    var ME = function ME(mantissa, exponent) {
      return Decimal.fromMantissaExponent(mantissa, exponent);
    };
  
    var ME_NN = function ME_NN(mantissa, exponent) {
      return Decimal.fromMantissaExponent_noNormalize(mantissa, exponent);
    };
    
    var decimalPlaces = function decimalPlaces(value, places) {
      var len = places + 1;
      var numDigits = Math.ceil(Math.log10(Math.abs(value)));
      var rounded = Math.round(value * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);
      return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));
    };
    
    var f_maglog10 = function(n) {
      return Math.sign(n)*Math.log10(Math.abs(n));
    }
    
    //from HyperCalc source code
    var f_gamma = function(n) {
      if (!isFinite(n)) { return n; }
      if (n < -50)
      {
        if (n === Math.trunc(n)) { return Number.NEGATIVE_INFINITY; }
        return 0;
      }
      
      var scal1 = 1;
      while (n < 10)
      {
        scal1 = scal1*n;
        ++n;
      }
      
      n -= 1;
      var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)
      l = l + (n+0.5)*Math.log(n);
      l = l - n;
      var n2 = n*n;
      var np = n;
      l = l+1/(12*np);
      np = np*n2;
      l = l+1/(360*np);
      np = np*n2;
      l = l+1/(1260*np);
      np = np*n2;
      l = l+1/(1680*np);
      np = np*n2;
      l = l+1/(1188*np);
      np = np*n2;
      l = l+691/(360360*np);
      np = np*n2;
      l = l+7/(1092*np);
      np = np*n2;
      l = l+3617/(122400*np);
  
      return Math.exp(l)/scal1;
    };
    
    var twopi = 6.2831853071795864769252842;  // 2*pi
    var EXPN1 = 0.36787944117144232159553;  // exp(-1)
    var OMEGA = 0.56714329040978387299997;  // W(1, 0)
    //from https://math.stackexchange.com/a/465183
    // The evaluation can become inaccurate very close to the branch point
    var f_lambertw = function(z, tol = 1e-10) {
      var w;
      var wn;
  
      if (!Number.isFinite(z)) { return z; }
      if (z === 0)
      {
        return z;
      }
      if (z === 1)
      {
        return OMEGA;
      }
  
      if (z < 10)
      {
        w = 0;
      }
      else
      {
        w = Math.log(z)-Math.log(Math.log(z));
      }
  
      for (var i = 0; i < 100; ++i)
      {
        wn = (z * Math.exp(-w) + w * w)/(w + 1);
        if (Math.abs(wn - w) < tol*Math.abs(wn))
        {
          return wn;
        }
        else
        {
          w = wn;
        }
      }
  
      throw Error("Iteration failed to converge: " + z);
      //return Number.NaN;
    }
    
    var Decimal =
    /** @class */
    function () {
    
      function Decimal(value) {
        
        this.sign = Number.NaN;
        this.layer = Number.NaN;
        this.mag = Number.NaN;
  
        if (value instanceof Decimal) {
          this.fromDecimal(value);
        } else if (typeof value === "number") {
          this.fromNumber(value);
        } else if (typeof value === "string") {
          this.fromString(value);
        } else {
          this.sign = 0;
          this.layer = 0;
          this.mag = 0;
        }
      }
  
      Object.defineProperty(Decimal.prototype, "m", {
        get: function get() {
          if (this.sign === 0)
          {
            return 0;
          }
          else if (this.layer === 0)
          {
            var exp = Math.floor(Math.log10(this.mag));
            //handle special case 5e-324
            var man;
            if (this.mag === 5e-324)
            {
              man = 5;
            }
            else
            {
              man = this.mag / powerOf10(exp);
            }
            return this.sign*man;
          }
          else if (this.layer === 1)
          {
            var residue = this.mag-Math.floor(this.mag);
            return this.sign*Math.pow(10, residue);
          }
          else
          {
            //mantissa stops being relevant past 1e9e15 / ee15.954
            return this.sign;
          }
        },
        set: function set(value) {
          if (this.layer <= 2)
          {
            this.fromMantissaExponent(value, this.e);
          }
          else
          {
            //don't even pretend mantissa is meaningful
            this.sign = Math.sign(value);
            if (this.sign === 0) { this.layer === 0; this.exponent === 0; }
          }
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(Decimal.prototype, "e", {
        get: function get() {
          if (this.sign === 0)
          {
            return 0;
          }
          else if (this.layer === 0)
          {
            return Math.floor(Math.log10(this.mag));
          }
          else if (this.layer === 1)
          {
            return Math.floor(this.mag);
          }
          else if (this.layer === 2)
          {
            return Math.floor(Math.sign(this.mag)*Math.pow(10, Math.abs(this.mag)));
          }
          else
          {
            return this.mag*Number.POSITIVE_INFINITY;
          }
        },
        set: function set(value) {
          this.fromMantissaExponent(this.m, value);
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(Decimal.prototype, "s", {
        get: function get() {
          return this.sign;
        },
        set: function set(value) {
          if (value === 0) {
            this.sign = 0;
            this.layer = 0;
            this.mag = 0;
          }
          else
          {
            this.sign = value;
          }
        },
        enumerable: true,
        configurable: true
      });
      
      Object.defineProperty(Decimal.prototype, "mantissa", {
        get: function get() {
          return this.m;
        },
        set: function set(value) {
          this.m = value;
        },
        enumerable: true,
        configurable: true
      });
  
      Object.defineProperty(Decimal.prototype, "exponent", {
        get: function get() {
          return this.e;
        },
        set: function set(value) {
          this.e = value;
        },
        enumerable: true,
        configurable: true
      });
  
      Decimal.fromComponents = function (sign, layer, mag) {
        return new Decimal().fromComponents(sign, layer, mag);
      };
  
      Decimal.fromComponents_noNormalize = function (sign, layer, mag) {
        return new Decimal().fromComponents_noNormalize(sign, layer, mag);
      };
      
      Decimal.fromMantissaExponent = function (mantissa, exponent) {
        return new Decimal().fromMantissaExponent(mantissa, exponent);
      };
  
      Decimal.fromMantissaExponent_noNormalize = function (mantissa, exponent) {
        return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);
      };
      
      Decimal.fromDecimal = function (value) {
        return new Decimal().fromDecimal(value);
      };
  
      Decimal.fromNumber = function (value) {
        return new Decimal().fromNumber(value);
      };
  
      Decimal.fromString = function (value) {
        return new Decimal().fromString(value);
      };
  
      Decimal.fromValue = function (value) {
        return new Decimal().fromValue(value);
      };
  
      Decimal.fromValue_noAlloc = function (value) {
        return value instanceof Decimal ? value : new Decimal(value);
      };
      
      Decimal.abs = function (value) {
        return D(value).abs();
      };
  
      Decimal.neg = function (value) {
        return D(value).neg();
      };
  
      Decimal.negate = function (value) {
        return D(value).neg();
      };
  
      Decimal.negated = function (value) {
        return D(value).neg();
      };
  
      Decimal.sign = function (value) {
        return D(value).sign();
      };
  
      Decimal.sgn = function (value) {
        return D(value).sign();
      };
  
      Decimal.round = function (value) {
        return D(value).round();
      };
  
      Decimal.floor = function (value) {
        return D(value).floor();
      };
  
      Decimal.ceil = function (value) {
        return D(value).ceil();
      };
  
      Decimal.trunc = function (value) {
        return D(value).trunc();
      };
  
      Decimal.add = function (value, other) {
        return D(value).add(other);
      };
  
      Decimal.plus = function (value, other) {
        return D(value).add(other);
      };
  
      Decimal.sub = function (value, other) {
        return D(value).sub(other);
      };
  
      Decimal.subtract = function (value, other) {
        return D(value).sub(other);
      };
  
      Decimal.minus = function (value, other) {
        return D(value).sub(other);
      };
  
      Decimal.mul = function (value, other) {
        return D(value).mul(other);
      };
  
      Decimal.multiply = function (value, other) {
        return D(value).mul(other);
      };
  
      Decimal.times = function (value, other) {
        return D(value).mul(other);
      };
  
      Decimal.div = function (value, other) {
        return D(value).div(other);
      };
  
      Decimal.divide = function (value, other) {
        return D(value).div(other);
      };
  
      Decimal.recip = function (value) {
        return D(value).recip();
      };
  
      Decimal.reciprocal = function (value) {
        return D(value).recip();
      };
  
      Decimal.reciprocate = function (value) {
        return D(value).reciprocate();
      };
  
      Decimal.cmp = function (value, other) {
        return D(value).cmp(other);
      };
  
      Decimal.cmpabs = function (value, other) {
        return D(value).cmpabs(other);
      };
      
      Decimal.compare = function (value, other) {
        return D(value).cmp(other);
      };
  
      Decimal.eq = function (value, other) {
        return D(value).eq(other);
      };
  
      Decimal.equals = function (value, other) {
        return D(value).eq(other);
      };
  
      Decimal.neq = function (value, other) {
        return D(value).neq(other);
      };
  
      Decimal.notEquals = function (value, other) {
        return D(value).notEquals(other);
      };
  
      Decimal.lt = function (value, other) {
        return D(value).lt(other);
      };
  
      Decimal.lte = function (value, other) {
        return D(value).lte(other);
      };
  
      Decimal.gt = function (value, other) {
        return D(value).gt(other);
      };
  
      Decimal.gte = function (value, other) {
        return D(value).gte(other);
      };
  
      Decimal.max = function (value, other) {
        return D(value).max(other);
      };
      
      Decimal.min = function (value, other) {
        return D(value).min(other);
      };
  
      Decimal.minabs = function (value, other) {
        return D(value).minabs(other);
      };
      
      Decimal.maxabs = function (value, other) {
        return D(value).maxabs(other);
      };
      
      Decimal.clamp = function(value, min, max) {
        return D(value).clamp(min, max);
      }
      
      Decimal.clampMin = function(value, min) {
        return D(value).clampMin(min);
      }
      
      Decimal.clampMax = function(value, max) {
        return D(value).clampMax(max);
      }
  
      Decimal.cmp_tolerance = function (value, other, tolerance) {
        return D(value).cmp_tolerance(other, tolerance);
      };
  
      Decimal.compare_tolerance = function (value, other, tolerance) {
        return D(value).cmp_tolerance(other, tolerance);
      };
  
      Decimal.eq_tolerance = function (value, other, tolerance) {
        return D(value).eq_tolerance(other, tolerance);
      };
  
      Decimal.equals_tolerance = function (value, other, tolerance) {
        return D(value).eq_tolerance(other, tolerance);
      };
  
      Decimal.neq_tolerance = function (value, other, tolerance) {
        return D(value).neq_tolerance(other, tolerance);
      };
  
      Decimal.notEquals_tolerance = function (value, other, tolerance) {
        return D(value).notEquals_tolerance(other, tolerance);
      };
  
      Decimal.lt_tolerance = function (value, other, tolerance) {
        return D(value).lt_tolerance(other, tolerance);
      };
  
      Decimal.lte_tolerance = function (value, other, tolerance) {
        return D(value).lte_tolerance(other, tolerance);
      };
  
      Decimal.gt_tolerance = function (value, other, tolerance) {
        return D(value).gt_tolerance(other, tolerance);
      };
  
      Decimal.gte_tolerance = function (value, other, tolerance) {
        return D(value).gte_tolerance(other, tolerance);
      };
  
      Decimal.pLog10 = function (value) {
        return D(value).pLog10();
      };
      
      Decimal.absLog10 = function (value) {
        return D(value).absLog10();
      };
      
      Decimal.log10 = function (value) {
        return D(value).log10();
      };
  
      Decimal.log = function (value, base) {
        return D(value).log(base);
      };
  
      Decimal.log2 = function (value) {
        return D(value).log2();
      };
  
      Decimal.ln = function (value) {
        return D(value).ln();
      };
  
      Decimal.logarithm = function (value, base) {
        return D(value).logarithm(base);
      };
  
      Decimal.pow = function (value, other) {
        return D(value).pow(other);
      };
      
      Decimal.pow10 = function (value) {
        return D(value).pow10();
      };
      
      Decimal.root = function (value, other) {
        return D(value).root(other);
      };
      
      Decimal.factorial = function (value, other) {
        return D(value).factorial();
      };
      
      Decimal.gamma = function (value, other) {
        return D(value).gamma();
      };
      
      Decimal.lngamma = function (value, other) {
        return D(value).lngamma();
      };
  
      Decimal.exp = function (value) {
        return D(value).exp();
      };
  
      Decimal.sqr = function (value) {
        return D(value).sqr();
      };
  
      Decimal.sqrt = function (value) {
        return D(value).sqrt();
      };
  
      Decimal.cube = function (value) {
        return D(value).cube();
      };
  
      Decimal.cbrt = function (value) {
        return D(value).cbrt();
      };
      
      Decimal.tetrate = function (value, height = 2, payload = FC_NN(1, 0, 1)) {
        return D(value).tetrate(height, payload);
      }
      
      Decimal.iteratedexp = function (value, height = 2, payload = FC_NN(1, 0, 1)) {
        return D(value).iteratedexp(height, payload);
      }
      
      Decimal.iteratedlog = function (value, base = 10, times = 1) {
        return D(value).iteratedlog(base, times);
      }
      
      Decimal.layeradd10 = function (value, diff) {
        return D(value).layeradd10(diff);
      }
      
       Decimal.layeradd = function (value, diff, base = 10) {
        return D(value).layeradd(diff, base);
      }
      
      Decimal.slog = function (value, base = 10) {
        return D(value).slog(base);
      }
      
      Decimal.lambertw = function(value) {
        return D(value).lambertw();
      }
      
      Decimal.ssqrt = function(value) {
        return D(value).ssqrt();
      }
      
      Decimal.pentate = function (value, height = 2, payload = FC_NN(1, 0, 1)) {
        return D(value).pentate(height, payload);
      }
      
      /**
       * If you're willing to spend 'resourcesAvailable' and want to buy something
       * with exponentially increasing cost each purchase (start at priceStart,
       * multiply by priceRatio, already own currentOwned), how much of it can you buy?
       * Adapted from Trimps source code.
       */
  
  
      Decimal.affordGeometricSeries = function (resourcesAvailable, priceStart, priceRatio, currentOwned) {
        return this.affordGeometricSeries_core(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);
      };
      /**
       * How much resource would it cost to buy (numItems) items if you already have currentOwned,
       * the initial price is priceStart and it multiplies by priceRatio each purchase?
       */
  
  
      Decimal.sumGeometricSeries = function (numItems, priceStart, priceRatio, currentOwned) {
        return this.sumGeometricSeries_core(numItems, D(priceStart), D(priceRatio), currentOwned);
      };
      /**
       * If you're willing to spend 'resourcesAvailable' and want to buy something with additively
       * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),
       * how much of it can you buy?
       */
  
  
      Decimal.affordArithmeticSeries = function (resourcesAvailable, priceStart, priceAdd, currentOwned) {
        return this.affordArithmeticSeries_core(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));
      };
      /**
       * How much resource would it cost to buy (numItems) items if you already have currentOwned,
       * the initial price is priceStart and it adds priceAdd each purchase?
       * Adapted from http://www.mathwords.com/a/arithmetic_series.htm
       */
  
  
      Decimal.sumArithmeticSeries = function (numItems, priceStart, priceAdd, currentOwned) {
        return this.sumArithmeticSeries_core(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));
      };
      /**
       * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),
       * the lowest efficiency score is the better one to purchase.
       * From Frozen Cookies:
       * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F
       */
  
  
      Decimal.efficiencyOfPurchase = function (cost, currentRpS, deltaRpS) {
        return this.efficiencyOfPurchase_core(D(cost), D(currentRpS), D(deltaRpS));
      };
  
      Decimal.randomDecimalForTesting = function (maxLayers) {
        // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.
        //5% of the time, return 0
        if (Math.random() * 20 < 1) {
          return FC_NN(0, 0, 0);
        }
        
        var randomsign = Math.random() > 0.5 ? 1 : -1;
        
        //5% of the time, return 1 or -1
        if (Math.random() * 20 < 1) {
          return FC_NN(randomsign, 0, 1);
        }
        
        //pick a random layer
        var layer = Math.floor(Math.random()*(maxLayers+1));
  
        var randomexp = layer === 0 ? Math.random()*616-308 : Math.random()*16;
        //10% of the time, make it a simple power of 10
        if (Math.random() > 0.9) { randomexp = Math.trunc(randomexp); }
        var randommag = Math.pow(10, randomexp);
        //10% of the time, trunc mag
        if (Math.random() > 0.9) { randommag = Math.trunc(randommag); }
        return FC(randomsign, layer, randommag);
      };
  
      Decimal.affordGeometricSeries_core = function (resourcesAvailable, priceStart, priceRatio, currentOwned) {
        var actualStart = priceStart.mul(priceRatio.pow(currentOwned));
        return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10().div(priceRatio.log10()));
      };
  
      Decimal.sumGeometricSeries_core = function (numItems, priceStart, priceRatio, currentOwned) {
        return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));
      };
  
      Decimal.affordArithmeticSeries_core = function (resourcesAvailable, priceStart, priceAdd, currentOwned) {
        // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d
        // where a is actualStart, d is priceAdd and S is resourcesAvailable
        // then floor it and you're done!
        var actualStart = priceStart.add(currentOwned.mul(priceAdd));
        var b = actualStart.sub(priceAdd.div(2));
        var b2 = b.pow(2);
        return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();
      };
  
      Decimal.sumArithmeticSeries_core = function (numItems, priceStart, priceAdd, currentOwned) {
        var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)
  
        return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));
      };
  
      Decimal.efficiencyOfPurchase_core = function (cost, currentRpS, deltaRpS) {
        return cost.div(currentRpS).add(cost.div(deltaRpS));
      };
      
      Decimal.prototype.normalize = function () {
        /*
        PSEUDOCODE:
        Whenever we are partially 0 (sign is 0 or mag and layer is 0), make it fully 0.
        Whenever we are at or hit layer 0, extract sign from negative mag.
        If layer === 0 and mag < FIRST_NEG_LAYER (1/9e15), shift to 'first negative layer' (add layer, log10 mag).
        While abs(mag) > EXP_LIMIT (9e15), layer += 1, mag = maglog10(mag).
        While abs(mag) < LAYER_DOWN (15.954) and layer > 0, layer -= 1, mag = pow(10, mag).
        
        When we're done, all of the following should be true OR one of the numbers is not IsFinite OR layer is not IsInteger (error state):
        Any 0 is totally zero (0, 0, 0).
        Anything layer 0 has mag 0 OR mag > 1/9e15 and < 9e15.
        Anything layer 1 or higher has abs(mag) >= 15.954 and < 9e15.
        We will assume in calculations that all Decimals are either erroneous or satisfy these criteria. (Otherwise: Garbage in, garbage out.)
        */
        if (this.sign === 0 || (this.mag === 0 && this.layer === 0))
        {
          this.sign = 0;
          this.mag = 0;
          this.layer = 0;
          return this;
        }
        
        if (this.layer === 0 && this.mag < 0)
        {
          //extract sign from negative mag at layer 0
          this.mag = -this.mag;
          this.sign = -this.sign;
        }
        
        //Handle shifting from layer 0 to negative layers.
        if (this.layer === 0 && this.mag < FIRST_NEG_LAYER)
        {
          this.layer += 1;
          this.mag = Math.log10(this.mag);
          return this;
        }
        
        var absmag = Math.abs(this.mag);
        var signmag = Math.sign(this.mag);
        
        if (absmag >= EXP_LIMIT)
        {
          this.layer += 1;
          this.mag = signmag*Math.log10(absmag);
          return this;
        }
        else
        {
          while (absmag < LAYER_DOWN && this.layer > 0)
          {
            this.layer -= 1;
            if (this.layer === 0)
            {
              this.mag = Math.pow(10, this.mag);
            }
            else
            {
              this.mag = signmag*Math.pow(10, absmag);
              absmag = Math.abs(this.mag);
              signmag = Math.sign(this.mag);
            }
          }
          if (this.layer === 0)
          {
            if (this.mag < 0)
            {
              //extract sign from negative mag at layer 0
              this.mag = -this.mag;
              this.sign = -this.sign;
            }
            else if (this.mag === 0)
            {
              //excessive rounding can give us all zeroes
              this.sign = 0;
            }
          }
        }
  
        return this;
      };
  
      Decimal.prototype.fromComponents = function (sign, layer, mag) {
        this.sign = sign;
        this.layer = layer;
        this.mag = mag;
  
        this.normalize();
        return this;
      };
  
      Decimal.prototype.fromComponents_noNormalize = function (sign, layer, mag) {
        this.sign = sign;
        this.layer = layer;
        this.mag = mag;
        return this;
      };
      
      Decimal.prototype.fromMantissaExponent = function (mantissa, exponent) {
        this.layer = 1;
        this.sign = Math.sign(mantissa);
        mantissa = Math.abs(mantissa);
        this.mag = exponent + Math.log10(mantissa);
  
        this.normalize();
        return this;
      };
  
  
      Decimal.prototype.fromMantissaExponent_noNormalize = function (mantissa, exponent) {
        //The idea of 'normalizing' a break_infinity.js style Decimal doesn't really apply. So just do the same thing.
        this.fromMantissaExponent(mantissa, exponent);
        return this;
      };
  
      Decimal.prototype.fromDecimal = function (value) {
        this.sign = value.sign;
        this.layer = value.layer;
        this.mag = value.mag;
        return this;
      };
  
      Decimal.prototype.fromNumber = function (value) {
        this.mag = Math.abs(value);
        this.sign = Math.sign(value);
        this.layer = 0;
        this.normalize();
        return this;
      };
  
      var IGNORE_COMMAS = true;
      var COMMAS_ARE_DECIMAL_POINTS = false;
      
      Decimal.prototype.fromString = function (value) {
        if (IGNORE_COMMAS) { value = value.replace(",", ""); }
        else if (COMMAS_ARE_DECIMAL_POINTS) { value = value.replace(",", "."); }
      
        //Handle x^^^y format.
        var pentationparts = value.split("^^^");
        if (pentationparts.length === 2)
        {
          var base = parseFloat(pentationparts[0]);
          var height = parseFloat(pentationparts[1]);
          var payload = 1;
          var heightparts = pentationparts[1].split(";");
          if (heightparts.length === 2)
          {
            var payload = parseFloat(heightparts[1]);
            if (!isFinite(payload)) { payload = 1; }
          }
          if (isFinite(base) && isFinite(height))
          {
            var result = Decimal.pentate(base, height, payload);
            this.sign = result.sign;
            this.layer = result.layer;
            this.mag = result.mag;
            return this;
          }
        }
      
        //Handle x^^y format.
        var tetrationparts = value.split("^^");
        if (tetrationparts.length === 2)
        {
          var base = parseFloat(tetrationparts[0]);
          var height = parseFloat(tetrationparts[1]);
          var heightparts = tetrationparts[1].split(";");
          if (heightparts.length === 2)
          {
            var payload = parseFloat(heightparts[1]);
            if (!isFinite(payload)) { payload = 1; }
          }
          if (isFinite(base) && isFinite(height))
          {
            var result = Decimal.tetrate(base, height, payload);
            this.sign = result.sign;
            this.layer = result.layer;
            this.mag = result.mag;
            return this;
          }
        }
        
        //Handle x^y format.
        var powparts = value.split("^");
        if (powparts.length === 2)
        {
          var base = parseFloat(powparts[0]);
          var exponent = parseFloat(powparts[1]);
          if (isFinite(base) && isFinite(exponent))
          {
            var result = Decimal.pow(base, exponent);
            this.sign = result.sign;
            this.layer = result.layer;
            this.mag = result.mag;
            return this;
          }
        }
        
        //Handle various cases involving it being a Big Number.
        value = value.trim().toLowerCase();
        
        //handle X PT Y format.
        var ptparts = value.split("pt");
        if (ptparts.length === 2)
        {
          base = 10;
          height = parseFloat(ptparts[0]);
          ptparts[1] = ptparts[1].replace("(", "");
          ptparts[1] = ptparts[1].replace(")", "");
          var payload = parseFloat(ptparts[1]);
          if (!isFinite(payload)) { payload = 1; }
          if (isFinite(base) && isFinite(height))
          {
            var result = Decimal.tetrate(base, height, payload);
            this.sign = result.sign;
            this.layer = result.layer;
            this.mag = result.mag;
            return this;
          }
        }
        
        //handle XpY format (it's the same thing just with p).
        var ptparts = value.split("p");
        if (ptparts.length === 2)
        {
          base = 10;
          height = parseFloat(ptparts[0]);
          ptparts[1] = ptparts[1].replace("(", "");
          ptparts[1] = ptparts[1].replace(")", "");
          var payload = parseFloat(ptparts[1]);
          if (!isFinite(payload)) { payload = 1; }
          if (isFinite(base) && isFinite(height))
          {
            var result = Decimal.tetrate(base, height, payload);
            this.sign = result.sign;
            this.layer = result.layer;
            this.mag = result.mag;
            return this;
          }
        }
  
        var parts = value.split("e");
        var ecount = parts.length-1;
      
        //Handle numbers that are exactly floats (0 or 1 es).
        if (ecount === 0)
        {
          var numberAttempt = parseFloat(value);
          if (isFinite(numberAttempt))
          {
            return this.fromNumber(numberAttempt);
          }
        }
        else if (ecount === 1)
        {
          //Very small numbers ("2e-3000" and so on) may look like valid floats but round to 0.
          var numberAttempt = parseFloat(value);
          if (isFinite(numberAttempt) && numberAttempt !== 0)
          {
            return this.fromNumber(numberAttempt);
          }
        }
        
        //Handle new (e^N)X format.
        var newparts = value.split("e^");
        if (newparts.length === 2)
        {
          this.sign = 1;
          if (newparts[0].charAt(0) == "-")
          {
            this.sign = -1;
          }
          var layerstring = "";
          for (var i = 0; i < newparts[1].length; ++i)
          {
            var chrcode = newparts[1].charCodeAt(i);
            if ((chrcode >= 43 && chrcode <= 57) || chrcode === 101) //is "0" to "9" or "+" or "-" or "." or "e" (or "," or "/")
            {
              layerstring += newparts[1].charAt(i);
            }
            else //we found the end of the layer count
            {
              this.layer = parseFloat(layerstring);
              this.mag = parseFloat(newparts[1].substr(i+1));
              this.normalize();
              return this;
            }
          }
        }
        
        if (ecount < 1) { this.sign = 0; this.layer = 0; this.mag = 0; return this; }
        var mantissa = parseFloat(parts[0]);
        if (mantissa === 0) { this.sign = 0; this.layer = 0; this.mag = 0; return this; }
        var exponent = parseFloat(parts[parts.length-1]);
        //handle numbers like AeBeC and AeeeeBeC
        if (ecount >= 2)
        {
          var me = parseFloat(parts[parts.length-2]);
          if (isFinite(me))
          {
            exponent *= Math.sign(me);
            exponent += f_maglog10(me);
          }
        }
        
        //Handle numbers written like eee... (N es) X
        if (!isFinite(mantissa))
        {
          this.sign = (parts[0] === "-") ? -1 : 1;
          this.layer = ecount;
          this.mag = exponent;
        }
        //Handle numbers written like XeY
        else if (ecount === 1)
        {
          this.sign = Math.sign(mantissa);
          this.layer = 1;
          //Example: 2e10 is equal to 10^log10(2e10) which is equal to 10^(10+log10(2))
          this.mag = exponent + Math.log10(Math.abs(mantissa));
        }
        //Handle numbers written like Xeee... (N es) Y
        else
        {
          this.sign = Math.sign(mantissa);
          this.layer = ecount;
          if (ecount === 2)
          {
            var result = Decimal.mul(FC(1, 2, exponent), D(mantissa));
            this.sign = result.sign;
            this.layer = result.layer;
            this.mag = result.mag;
            return this;
          }
          else
          {
            //at eee and above, mantissa is too small to be recognizable!
            this.mag = exponent;
          }
        }
        
        this.normalize();
        return this;
      };
  
      Decimal.prototype.fromValue = function (value) {
        if (value instanceof Decimal) {
          return this.fromDecimal(value);
        }
  
        if (typeof value === "number") {
          return this.fromNumber(value);
        }
  
        if (typeof value === "string") {
          return this.fromString(value);
        }
  
        this.sign = 0;
        this.layer = 0;
        this.mag = 0;
        return this;
      };
  
      Decimal.prototype.toNumber = function () {
        if (!Number.isFinite(this.layer)) { return Number.NaN; }
        if (this.layer === 0)
        {
          return this.sign*this.mag;
        }
        else if (this.layer === 1)
        {
          return this.sign*Math.pow(10, this.mag);
        }
        else //overflow for any normalized Decimal
        {
          return this.mag > 0 ? (this.sign > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY) : 0;
        }
      };
      
      Decimal.prototype.mantissaWithDecimalPlaces = function (places) {
        // https://stackoverflow.com/a/37425022
        if (isNaN(this.m)) {
          return Number.NaN;
        }
  
        if (this.m === 0) {
          return 0;
        }
  
        return decimalPlaces(this.m, places);
      };
      
      Decimal.prototype.magnitudeWithDecimalPlaces = function (places) {
        // https://stackoverflow.com/a/37425022
        if (isNaN(this.mag)) {
          return Number.NaN;
        }
  
        if (this.mag === 0) {
          return 0;
        }
  
        return decimalPlaces(this.mag, places);
      };
      
      Decimal.prototype.toString = function () {
        if (this.layer === 0)
        {
          if ((this.mag < 1e21 && this.mag > 1e-7) || this.mag === 0)
          {
            return (this.sign*this.mag).toString();
          }
          return this.m + "e" + this.e;
        }
        else if (this.layer === 1)
        {
          return this.m + "e" + this.e;
        }
        else
        {
          //layer 2+
          if (this.layer <= MAX_ES_IN_A_ROW)
          {
            return (this.sign === -1 ? "-" : "") + "e".repeat(this.layer) + this.mag;
          }
          else
          {
            return (this.sign === -1 ? "-" : "") + "(e^" + this.layer + ")" + this.mag;
          }
        }
      };
      
      Decimal.prototype.toExponential = function (places) {
        if (this.layer === 0)
        {
          return (this.sign*this.mag).toExponential(places);
        }
        return this.toStringWithDecimalPlaces(places);
      };
      
      Decimal.prototype.toFixed = function (places) {
        if (this.layer === 0)
        {
          return (this.sign*this.mag).toFixed(places);
        }
        return this.toStringWithDecimalPlaces(places);
      };
      
      Decimal.prototype.toPrecision = function (places) {
        if (this.e <= -7) {
          return this.toExponential(places - 1);
        }
  
        if (places > this.e) {
          return this.toFixed(places - this.exponent - 1);
        }
  
        return this.toExponential(places - 1);
      };
      
      Decimal.prototype.valueOf = function () {
        return this.toString();
      };
  
      Decimal.prototype.toJSON = function () {
        return this.toString();
      };
      
      Decimal.prototype.toStringWithDecimalPlaces = function (places) {
        if (this.layer === 0)
        {
          if ((this.mag < 1e21 && this.mag > 1e-7) || this.mag === 0)
          {
            return (this.sign*this.mag).toFixed(places);
          }
          return decimalPlaces(this.m, places) + "e" + decimalPlaces(this.e, places);
        }
        else if (this.layer === 1)
        {
          return decimalPlaces(this.m, places) + "e" + decimalPlaces(this.e, places);
        }
        else
        {
          //layer 2+
          if (this.layer <= MAX_ES_IN_A_ROW)
          {
            return (this.sign === -1 ? "-" : "") + "e".repeat(this.layer) + decimalPlaces(this.mag, places);
          }
          else
          {
            return (this.sign === -1 ? "-" : "") + "(e^" + this.layer + ")" + decimalPlaces(this.mag, places);
          }
        }
      };
      
      Decimal.prototype.abs = function () {
        return FC_NN(this.sign === 0 ? 0 : 1, this.layer, this.mag);
      };
  
      Decimal.prototype.neg = function () {
        return FC_NN(-this.sign, this.layer, this.mag);
      };
  
      Decimal.prototype.negate = function () {
        return this.neg();
      };
  
      Decimal.prototype.negated = function () {
        return this.neg();
      };
  
      Decimal.prototype.sign = function () {
        return this.sign;
      };
  
      Decimal.prototype.sgn = function () {
        return this.sign;
      };
      
      Decimal.prototype.round = function () {
        if (this.mag < 0)
        {
          return Decimal.dZero;
        }
        if (this.layer === 0)
        {
          return FC(this.sign, 0, Math.round(this.mag));
        }
        return this;
      };
  
      Decimal.prototype.floor = function () {
        if (this.mag < 0)
        {
          return Decimal.dZero;
        }
        if (this.layer === 0)
        {
          return FC(this.sign, 0, Math.floor(this.mag));
        }
        return this;
      };
  
      Decimal.prototype.ceil = function () {
        if (this.mag < 0)
        {
          return Decimal.dZero;
        }
        if (this.layer === 0)
        {
          return FC(this.sign, 0, Math.ceil(this.mag));
        }
        return this;
      };
  
      Decimal.prototype.trunc = function () {
        if (this.mag < 0)
        {
          return Decimal.dZero;
        }
        if (this.layer === 0)
        {
          return FC(this.sign, 0, Math.trunc(this.mag));
        }
        return this;
      };
  
      Decimal.prototype.add = function (value) {
        var decimal = D(value);
        
        //inf/nan check
        if (!Number.isFinite(this.layer)) { return this; }
        if (!Number.isFinite(decimal.layer)) { return decimal; }
        
        //Special case - if one of the numbers is 0, return the other number.
        if (this.sign === 0) { return decimal; }
        if (decimal.sign === 0) { return this; }
        
        //Special case - Adding a number to its negation produces 0, no matter how large.
        if (this.sign === -(decimal.sign) && this.layer === decimal.layer && this.mag === decimal.mag) { return FC_NN(0, 0, 0); }
        
        var a;
        var b;
        
        //Special case: If one of the numbers is layer 2 or higher, just take the bigger number.
        if ((this.layer >= 2 || decimal.layer >= 2)) { return this.maxabs(decimal); }
        
        if (Decimal.cmpabs(this, decimal) > 0)
        {
          a = this;
          b = decimal;
        }
        else
        {
          a = decimal;
          b = this;
        }
        
        if (a.layer === 0 && b.layer === 0) { return D(a.sign*a.mag + b.sign*b.mag); }
        
        var layera = a.layer*Math.sign(a.mag);
        var layerb = b.layer*Math.sign(b.mag);
        
        //If one of the numbers is 2+ layers higher than the other, just take the bigger number.
        if (layera - layerb >= 2) { return a; }
        
        if (layera === 0 && layerb === -1)
        {
          if (Math.abs(b.mag-Math.log10(a.mag)) > MAX_SIGNIFICANT_DIGITS)
          {
            return a;
          }
          else
          {
            var magdiff = Math.pow(10, Math.log10(a.mag)-b.mag);
            var mantissa = (b.sign)+(a.sign*magdiff);
            return FC(Math.sign(mantissa), 1, b.mag+Math.log10(Math.abs(mantissa)));
          }
        }
        
        if (layera === 1 && layerb === 0)
        {
          if (Math.abs(a.mag-Math.log10(b.mag)) > MAX_SIGNIFICANT_DIGITS)
          {
            return a;
          }
          else
          {
            var magdiff = Math.pow(10, a.mag-Math.log10(b.mag));
            var mantissa = (b.sign)+(a.sign*magdiff);
            return FC(Math.sign(mantissa), 1, Math.log10(b.mag)+Math.log10(Math.abs(mantissa)));
          }
        }
        
        if (Math.abs(a.mag-b.mag) > MAX_SIGNIFICANT_DIGITS)
        {
          return a;
        }
        else
        {
          var magdiff = Math.pow(10, a.mag-b.mag);
          var mantissa = (b.sign)+(a.sign*magdiff);
          return FC(Math.sign(mantissa), 1, b.mag+Math.log10(Math.abs(mantissa)));
        }
        
        throw Error("Bad arguments to add: " + this + ", " + value);
      };
  
      Decimal.prototype.plus = function (value) {
        return this.add(value);
      };
  
      Decimal.prototype.sub = function (value) {
        return this.add(D(value).neg());
      };
  
      Decimal.prototype.subtract = function (value) {
        return this.sub(value);
      };
  
      Decimal.prototype.minus = function (value) {
        return this.sub(value);
      };
  
      Decimal.prototype.mul = function (value) {
        var decimal = D(value);
        
        //inf/nan check
        if (!Number.isFinite(this.layer)) { return this; }
        if (!Number.isFinite(decimal.layer)) { return decimal; }
        
        //Special case - if one of the numbers is 0, return 0.
        if (this.sign === 0 || decimal.sign === 0) { return FC_NN(0, 0, 0); }
        
        //Special case - Multiplying a number by its own reciprocal yields +/- 1, no matter how large.
        if (this.layer === decimal.layer && this.mag === -decimal.mag) { return FC_NN(this.sign*decimal.sign, 0, 1); }
              
        var a;
        var b;
        
        //Which number is bigger in terms of its multiplicative distance from 1?
        if ((this.layer > decimal.layer) || (this.layer == decimal.layer && Math.abs(this.mag) > Math.abs(decimal.mag)))
        {
          a = this;
          b = decimal;
        }
        else
        {
          a = decimal;
          b = this;
        }
        
        if (a.layer === 0 && b.layer === 0) { return D(a.sign*b.sign*a.mag*b.mag); }
        
        //Special case: If one of the numbers is layer 3 or higher or one of the numbers is 2+ layers bigger than the other, just take the bigger number.
        if (a.layer >= 3 || (a.layer - b.layer >= 2)) { return FC(a.sign*b.sign, a.layer, a.mag); }
  
        if (a.layer === 1 && b.layer === 0)
        { 
          return FC(a.sign*b.sign, 1, a.mag+Math.log10(b.mag));
        }
        
        if (a.layer === 1 && b.layer === 1)
        {
          return FC(a.sign*b.sign, 1, a.mag+b.mag);
        }
        
        if (a.layer === 2 && b.layer === 1)
        {
          var newmag = FC(Math.sign(a.mag), a.layer-1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer-1, Math.abs(b.mag)));
          return FC(a.sign*b.sign, newmag.layer+1, newmag.sign*newmag.mag);
        }
        
        if (a.layer === 2 && b.layer === 2)
        {
          var newmag = FC(Math.sign(a.mag), a.layer-1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer-1, Math.abs(b.mag)));
          return FC(a.sign*b.sign, newmag.layer+1, newmag.sign*newmag.mag);
        }
        
        throw Error("Bad arguments to mul: " + this + ", " + value);
      };
  
      Decimal.prototype.multiply = function (value) {
        return this.mul(value);
      };
  
      Decimal.prototype.times = function (value) {
        return this.mul(value);
      };
  
      Decimal.prototype.div = function (value) {
        var decimal = D(value);
        return this.mul(decimal.recip());
      };
  
      Decimal.prototype.divide = function (value) {
        return this.div(value);
      };
  
      Decimal.prototype.divideBy = function (value) {
        return this.div(value);
      };
  
      Decimal.prototype.dividedBy = function (value) {
        return this.div(value);
      };
  
      Decimal.prototype.recip = function () {
        if (this.mag === 0)
        {
          return Decimal.dNaN;
        }
        else if (this.layer === 0)
        {
          return FC(this.sign, 0, 1/this.mag);
        }
        else
        {
          return FC(this.sign, this.layer, -this.mag);
        }
      };
  
      Decimal.prototype.reciprocal = function () {
        return this.recip();
      };
  
      Decimal.prototype.reciprocate = function () {
        return this.recip();
      };
      
      /**
       * -1 for less than value, 0 for equals value, 1 for greater than value
       */
      Decimal.prototype.cmp = function (value) {
        var decimal = D(value);
        if (this.sign > decimal.sign) { return 1; }
        if (this.sign < decimal.sign) { return -1; }
        return this.sign*this.cmpabs(value);
      };
      
      Decimal.prototype.cmpabs = function (value) {
        var decimal = D(value);
        var layera = this.mag > 0 ? this.layer : -this.layer;
        var layerb = decimal.mag > 0 ? decimal.layer : -decimal.layer;
        if (layera > layerb) { return 1; }
        if (layera < layerb) { return -1; }
        if (this.mag > decimal.mag) { return 1; }
        if (this.mag < decimal.mag) { return -1; }
        return 0;
      };
  
      Decimal.prototype.compare = function (value) {
        return this.cmp(value);
      };
  
      Decimal.prototype.eq = function (value) {
        var decimal = D(value);
        return this.sign === decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag;
      };
  
      Decimal.prototype.equals = function (value) {
        return this.eq(value);
      };
  
      Decimal.prototype.neq = function (value) {
        return !this.eq(value);
      };
  
      Decimal.prototype.notEquals = function (value) {
        return this.neq(value);
      };
  
      Decimal.prototype.lt = function (value) {
        var decimal = D(value);
        return this.cmp(value) === -1;
      };
  
      Decimal.prototype.lte = function (value) {
        return !this.gt(value);
      };
  
      Decimal.prototype.gt = function (value) {
        var decimal = D(value);
        return this.cmp(value) === 1;
      };
  
      Decimal.prototype.gte = function (value) {
        return !this.lt(value);
      };
  
      Decimal.prototype.max = function (value) {
        var decimal = D(value);
        return this.lt(decimal) ? decimal : this;
      };
  
      Decimal.prototype.min = function (value) {
        var decimal = D(value);
        return this.gt(decimal) ? decimal : this;
      };
      
      Decimal.prototype.maxabs = function (value) {
        var decimal = D(value);
        return this.cmpabs(decimal) < 0 ? decimal : this;
      };
  
      Decimal.prototype.minabs = function (value) {
        var decimal = D(value);
        return this.cmpabs(decimal) > 0 ? decimal : this;
      };
      
      Decimal.prototype.clamp = function(min, max) {
        return this.max(min).min(max);
      }
      
      Decimal.prototype.clampMin = function(min) {
        return this.max(min);
      }
      
      Decimal.prototype.clampMax = function(max) {
        return this.min(max);
      }
  
      Decimal.prototype.cmp_tolerance = function (value, tolerance) {
        var decimal = D(value);
        return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);
      };
  
      Decimal.prototype.compare_tolerance = function (value, tolerance) {
        return this.cmp_tolerance(value, tolerance);
      };
      
      /**
       * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.
       * For example, if you put in 1e-9, then any number closer to the
       * larger number than (larger number)*1e-9 will be considered equal.
       */
      Decimal.prototype.eq_tolerance = function (value, tolerance) {
        var decimal = D(value); // https://stackoverflow.com/a/33024979
        if (tolerance == null) { tolerance = 1e-7; }
        //Numbers that are too far away are never close.
        if (this.sign !== decimal.sign) { return false; }
        if (Math.abs(this.layer - decimal.layer) > 1) { return false; }
        // return abs(a-b) <= tolerance * max(abs(a), abs(b))
        var magA = this.mag;
        var magB = decimal.mag;
        if (this.layer > decimal.layer) { magB = f_maglog10(magB); }
        if (this.layer < decimal.layer) { magA = f_maglog10(magA); }
        return Math.abs(magA-magB) <= tolerance*Math.max(Math.abs(magA), Math.abs(magB));
      };
  
      Decimal.prototype.equals_tolerance = function (value, tolerance) {
        return this.eq_tolerance(value, tolerance);
      };
  
      Decimal.prototype.neq_tolerance = function (value, tolerance) {
        return !this.eq_tolerance(value, tolerance);
      };
  
      Decimal.prototype.notEquals_tolerance = function (value, tolerance) {
        return this.neq_tolerance(value, tolerance);
      };
  
      Decimal.prototype.lt_tolerance = function (value, tolerance) {
        var decimal = D(value);
        return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);
      };
  
      Decimal.prototype.lte_tolerance = function (value, tolerance) {
        var decimal = D(value);
        return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);
      };
  
      Decimal.prototype.gt_tolerance = function (value, tolerance) {
        var decimal = D(value);
        return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);
      };
  
      Decimal.prototype.gte_tolerance = function (value, tolerance) {
        var decimal = D(value);
        return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);
      };
      
      Decimal.prototype.pLog10 = function() {
        if (this.lt(Decimal.dZero)) { return Decimal.dZero; }
        return this.log10();
      }
  
      Decimal.prototype.absLog10 = function () {
        if (this.sign === 0)
        {
          return Decimal.dNaN;
        }
        else if (this.layer > 0)
        {
          return FC(Math.sign(this.mag), this.layer-1, Math.abs(this.mag));
        }
        else
        {
          return FC(1, 0, Math.log10(this.mag));
        }
      };
      
      Decimal.prototype.log10 = function () {
        if (this.sign <= 0)
        {
          return Decimal.dNaN;
        }
        else if (this.layer > 0)
        {
          return FC(Math.sign(this.mag), this.layer-1, Math.abs(this.mag));
        }
        else
        {
          return FC(this.sign, 0, Math.log10(this.mag));
        }
      };
  
      Decimal.prototype.log = function (base) {
        base = D(base);
        if (this.sign <= 0)
        {
          return Decimal.dNaN;
        }
        if (base.sign <= 0)
        {
          return Decimal.dNaN;
        }
        if (base.sign === 1 && base.layer === 0 && base.mag === 1)
        {
          return Decimal.dNaN;
        }
        else if (this.layer === 0 && base.layer === 0)
        {
          return FC(this.sign, 0, Math.log(this.mag)/Math.log(base.mag));
        }
        
        return Decimal.div(this.log10(), base.log10());
      };
  
      Decimal.prototype.log2 = function () {
        if (this.sign <= 0)
        {
          return Decimal.dNaN;
        }
        else if (this.layer === 0)
        {
          return FC(this.sign, 0, Math.log2(this.mag));
        }
        else if (this.layer === 1)
        {
          return FC(Math.sign(this.mag), 0, Math.abs(this.mag)*3.321928094887362); //log2(10)
        }
        else if (this.layer === 2)
        {
          return FC(Math.sign(this.mag), 1, Math.abs(this.mag)+0.5213902276543247); //-log10(log10(2))
        }
        else
        {
          return FC(Math.sign(this.mag), this.layer-1, Math.abs(this.mag));
        }
      };
  
      Decimal.prototype.ln = function () {
        if (this.sign <= 0)
        {
          return Decimal.dNaN;
        }
        else if (this.layer === 0)
        {
          return FC(this.sign, 0, Math.log(this.mag));
        }
        else if (this.layer === 1)
        {
          return FC(Math.sign(this.mag), 0, Math.abs(this.mag)*2.302585092994046); //ln(10)
        }
        else if (this.layer === 2)
        {
          return FC(Math.sign(this.mag), 1, Math.abs(this.mag)+0.36221568869946325); //log10(log10(e))
        }
        else
        {
          return FC(Math.sign(this.mag), this.layer-1, Math.abs(this.mag));
        }
      };
  
      Decimal.prototype.logarithm = function (base) {
        return this.log(base);
      };
  
      Decimal.prototype.pow = function (value) {
        var decimal = D(value);
        var a = this;
        var b = decimal;
  
        //special case: if a is 0, then return 0 (UNLESS b is 0, then return 1)
        if (a.sign === 0) { return b.eq(0) ? FC_NN(1, 0, 1) : a; }
        //special case: if a is 1, then return 1
        if (a.sign === 1 && a.layer === 0 && a.mag === 1) { return a; }
        //special case: if b is 0, then return 1
        if (b.sign === 0) { return FC_NN(1, 0, 1); }
        //special case: if b is 1, then return a
        if (b.sign === 1 && b.layer === 0 && b.mag === 1) { return a; }
        
        var result = (a.absLog10().mul(b)).pow10();
  
        if (this.sign === -1 && Math.abs(b.toNumber() % 2) === 1) {
          return result.neg();
        }
  
        return result;
      };
      
      Decimal.prototype.pow10 = function() {
        /*
        There are four cases we need to consider:
        1) positive sign, positive mag (e15, ee15): +1 layer (e.g. 10^15 becomes e15, 10^e15 becomes ee15)
        2) negative sign, positive mag (-e15, -ee15): +1 layer but sign and mag sign are flipped (e.g. 10^-15 becomes e-15, 10^-e15 becomes ee-15)
        3) positive sign, negative mag (e-15, ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1
        4) negative sign, negative mag (-e-15, -ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1
        */
        
        if (!Number.isFinite(this.layer) || !Number.isFinite(this.mag)) { return Decimal.dNaN; }
        
        var a = this;
        
        //handle layer 0 case - if no precision is lost just use Math.pow, else promote one layer
        if (a.layer === 0)
        {
          var newmag = Math.pow(10, a.sign*a.mag);
          if (Number.isFinite(newmag) && Math.abs(newmag) > 0.1) { return FC(1, 0, newmag); }
          else
          {
            if (a.sign === 0) { return Decimal.dOne; }
            else { a = FC_NN(a.sign, a.layer+1, Math.log10(a.mag)); }
          }
        }
        
        //handle all 4 layer 1+ cases individually
        if (a.sign > 0 && a.mag > 0)
        {
          return FC(a.sign, a.layer+1, a.mag);
        }
        if (a.sign < 0 && a.mag > 0)
        {
          return FC(-a.sign, a.layer+1, -a.mag);
        }
        //both the negative mag cases are identical: one +/- rounding error
        return Decimal.dOne;
      }
  
      Decimal.prototype.pow_base = function (value) {
        return D(value).pow(this);
      };
      
      Decimal.prototype.root = function (value) {
        var decimal = D(value);
        return this.pow(decimal.recip());
      }
  
      Decimal.prototype.factorial = function () {
        if (this.mag < 0)
        {
          return this.toNumber().add(1).gamma();
        }
        else if (this.layer === 0)
        {
          return this.add(1).gamma();
        }
        else if (this.layer === 1)
        {
          return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));
        }
        else
        {
          return Decimal.exp(this);
        }
      };
      
      //from HyperCalc source code
      Decimal.prototype.gamma = function () {
        if (this.mag < 0)
        {
          return this.recip();
        }
        else if (this.layer === 0)
        {
          if (this.lt(FC_NN(1, 0, 24)))
          {
            return D(f_gamma(this.sign*this.mag));
          }
          
          var t = this.mag - 1;
          var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)
          l = (l+((t+0.5)*Math.log(t)));
          l = l-t;
          var n2 = t*t;
          var np = t;
          var lm = 12*np;
          var adj = 1/lm;
          var l2 = l+adj;
          if (l2 === l)
          {
            return Decimal.exp(l);
          }
          
          l = l2;
          np = np*n2;
          lm = 360*np;
          adj = 1/lm;
          l2 = l-adj;
          if (l2 === l)
          {
            return Decimal.exp(l);
          }
          
          l = l2;
          np = np*n2;
          lm = 1260*np;
          var lt = 1/lm;
          l = l+lt;
          np = np*n2;
          lm = 1680*np;
          lt = 1/lm;
          l = l-lt;
          return Decimal.exp(l);
        }
        else if (this.layer === 1)
        {
          return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));
        }
        else
        {
          return Decimal.exp(this);
        }
      };
      
      Decimal.prototype.lngamma = function () {
        return this.gamma().ln();
      }
  
      Decimal.prototype.exp = function () {
        if (this.mag < 0) { return Decimal.dOne; }
        if (this.layer === 0 && this.mag <= 709.7) { return D(Math.exp(this.sign*this.mag)); }
        else if (this.layer === 0) { return FC(1, 1, this.sign*Math.log10(Math.E)*this.mag); }
        else if (this.layer === 1) { return FC(1, 2, this.sign*(Math.log10(0.4342944819032518)+this.mag)); }
        else { return FC(1, this.layer+1, this.sign*this.mag); }
      };
  
      Decimal.prototype.sqr = function () {
        return this.pow(2);
      };
  
      Decimal.prototype.sqrt = function () {
        if (this.layer === 0) { return D(Math.sqrt(this.sign*this.mag)); }
        else if (this.layer === 1) { return FC(1, 2, Math.log10(this.mag)-0.3010299956639812); }
        else
        {
          var result = Decimal.div(FC_NN(this.sign, this.layer-1, this.mag), FC_NN(1, 0, 2));
          result.layer += 1;
          result.normalize();
          return result;
        }
      };
  
      Decimal.prototype.cube = function () {
        return this.pow(3);
      };
  
      Decimal.prototype.cbrt = function () {
        return this.pow(1/3);
      };
      
      //Tetration/tetrate: The result of exponentiating 'this' to 'this' 'height' times in a row.  https://en.wikipedia.org/wiki/Tetration
      //If payload != 1, then this is 'iterated exponentiation', the result of exping (payload) to base (this) (height) times. https://andydude.github.io/tetration/archives/tetration2/ident.html
      //Works with negative and positive real heights.
      Decimal.prototype.tetrate = function(height = 2, payload = FC_NN(1, 0, 1)) {
        if (height === Number.POSITIVE_INFINITY)
        {
          //Formula for infinite height power tower.
          var negln = Decimal.ln(this).neg();
          return negln.lambertw().div(negln);
        }
        
        if (height < 0)
        {
          return Decimal.iteratedlog(payload, this, -height);
        }
        
        payload = D(payload);
        var oldheight = height;
        height = Math.trunc(height);
        var fracheight = oldheight-height;
       
        if (fracheight !== 0)
        {
          if (payload.eq(Decimal.dOne))
          {
            ++height;
            payload = new Decimal(fracheight);
          }
          else
          {
            if (this.eq(10))
            {
              payload = payload.layeradd10(fracheight);
            }
            else
            {
              payload = payload.layeradd(fracheight, this);
            }
          }
        }
        
        for (var i = 0; i < height; ++i)
        {
          payload = this.pow(payload);
          //bail if we're NaN
          if (!isFinite(payload.layer) || !isFinite(payload.mag)) { return payload; }
          //shortcut 
          if (payload.layer - this.layer > 3) { return FC_NN(payload.sign, payload.layer + (height - i - 1), payload.mag); }
          //give up after 100 iterations if nothing is happening
          if (i > 100) { return payload; }
        }
        return payload;
      }
      
      //iteratedexp/iterated exponentiation: - all cases handled in tetrate, so just call it
      Decimal.prototype.iteratedexp = function(height = 2, payload = FC_NN(1, 0, 1)) {
        return this.tetrate(height, payload);
      }
      
      //iterated log/repeated log: The result of applying log(base) 'times' times in a row. Approximately equal to subtracting (times) from the number's slog representation. Equivalent to tetrating to a negative height.
      //Works with negative and positive real heights.
      Decimal.prototype.iteratedlog = function(base = 10, times = 1) {      
        if (times < 0)
        {
          return Decimal.tetrate(base, -times, this);
        }
        
        base = D(base);
        var result = D(this);
        var fulltimes = times;
        times = Math.trunc(times);
        var fraction = fulltimes - times;
        if (result.layer - base.layer > 3)
        {
          var layerloss = Math.min(times, (result.layer - base.layer - 3));
          times -= layerloss;
          result.layer -= layerloss;
        }
        
        for (var i = 0; i < times; ++i)
        {
          result = result.log(base);
          //bail if we're NaN
          if (!isFinite(result.layer) || !isFinite(result.mag)) { return result; }
          //give up after 100 iterations if nothing is happening
          if (i > 100) { return result; }
        }
        
        //handle fractional part
        if (fraction > 0 && fraction < 1)
        {
          if (base.eq(10))
          {
            result = result.layeradd10(-fraction);
          }
          else
          {
            result = result.layeradd(-fraction, base);
          }
        }
        
        return result;
      }
      
      //Super-logarithm, one of tetration's inverses, tells you what size power tower you'd have to tetrate base to to get number. By definition, will never be higher than 1.8e308 in break_eternity.js, since a power tower 1.8e308 numbers tall is the largest representable number.
      // https://en.wikipedia.org/wiki/Super-logarithm
      Decimal.prototype.slog = function(base = 10) {
        if (this.mag < 0) { return Decimal.dNegOne; }
        
        base = D(base);
        
        var result = 0;
        var copy = D(this);
        if (copy.layer - base.layer > 3)
        {
          var layerloss = (copy.layer - base.layer - 3);
          result += layerloss;
          copy.layer -= layerloss;
        }
        
        for (var i = 0; i < 100; ++i)
        {
          if (copy.lt(Decimal.dZero))
          {
            copy = Decimal.pow(base, copy);
            result -= 1;
          }
          else if (copy.lte(Decimal.dOne))
          {
            return D(result + copy.toNumber() - 1); //<-- THIS IS THE CRITICAL FUNCTION
            //^ Also have to change tetrate payload handling and layeradd10 if this is changed!
          }
          else
          {
            result += 1;
            copy = Decimal.log(copy, base);
          }
        }
        return D(result);
      }
      
      //Approximations taken from the excellent paper https://web.archive.org/web/20090201164836/http://tetration.itgo.com/paper.html !
      //Not using for now unless I can figure out how to use it in all the related functions.
      /*var slog_criticalfunction_1 = function(x, z) {
        z = z.toNumber();
        return -1 + z;
      }
      
      var slog_criticalfunction_2 = function(x, z) {
        z = z.toNumber();
        var lnx = x.ln();
        if (lnx.layer === 0)
        {
          lnx = lnx.toNumber();
          return -1 + z*2*lnx/(1+lnx) - z*z*(1-lnx)/(1+lnx);
        }
        else
        {
          var term1 = lnx.mul(z*2).div(lnx.add(1));
          var term2 = Decimal.sub(1, lnx).mul(z*z).div(lnx.add(1));
          Decimal.dNegOne.add(Decimal.sub(term1, term2));
        }
      }
      
      var slog_criticalfunction_3 = function(x, z) {
        z = z.toNumber();
        var lnx = x.ln();
        var lnx2 = lnx.sqr();
        var lnx3 = lnx.cube();
        if (lnx.layer === 0 && lnx2.layer === 0 && lnx3.layer === 0)
        {
          lnx = lnx.toNumber();
          lnx2 = lnx2.toNumber();
          lnx3 = lnx3.toNumber();
          
          var term1 = 6*z*(lnx+lnx3);
          var term2 = 3*z*z*(3*lnx2-2*lnx3);
          var term3 = 2*z*z*z*(1-lnx-2*lnx2+lnx3);
          var top = term1+term2+term3;
          var bottom = 2+4*lnx+5*lnx2+2*lnx3;
          
          return -1 + top/bottom;
        }
        else
        {
          var term1 = (lnx.add(lnx3)).mul(6*z);
          var term2 = (lnx2.mul(3).sub(lnx3.mul(2))).mul(3*z*z);
          var term3 = (Decimal.dOne.sub(lnx).sub(lnx2.mul(2)).add(lnx3)).mul(2*z*z*z);
          var top = term1.add(term2).add(term3);
          var bottom = new Decimal(2).add(lnx.mul(4)).add(lnx2.mul(5)).add(lnx3.mul(2));
          
          return Decimal.dNegOne.add(top.div(bottom));
        }
      }*/
      
      //Function for adding/removing layers from a Decimal, even fractional layers (e.g. its slog10 representation).
      //Everything continues to use the linear approximation ATM.
      Decimal.prototype.layeradd10 = function(diff) {
        diff = Decimal.fromValue_noAlloc(diff).toNumber();
        var result = D(this);
        if (diff >= 1)
        {
          var layeradd = Math.trunc(diff);
          diff -= layeradd;
          result.layer += layeradd;
        }
        if (diff <= -1)
        {
          var layeradd = Math.trunc(diff);
          diff -= layeradd;
          result.layer += layeradd;
          if (result.layer < 0)
          {
            for (var i = 0; i < 100; ++i)
            {
              result.layer++;
              result.mag = Math.log10(result.mag);
              if (!isFinite(result.mag)) { return result; }
              if (result.layer >= 0) { break; }
            }
          }
        }
        
        //layeradd10: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 10 and iterated log base 10. Also equivalent to adding a fractional amount to the number's layer in its break_eternity.js representation.
        if (diff > 0)
        {
          var subtractlayerslater = 0;
          //Ironically, this edge case would be unnecessary if we had 'negative layers'.
          while (Number.isFinite(result.mag) && result.mag < 10)
          {
            result.mag = Math.pow(10, result.mag);
            ++subtractlayerslater;
          }
          
          //A^(10^B) === C, solve for B
          //B === log10(logA(C))
          
          if (result.mag > 1e10)
          {
            result.mag = Math.log10(result.mag);
            result.layer++;
          }
          
          //Note that every integer slog10 value, the formula changes, so if we're near such a number, we have to spend exactly enough layerdiff to hit it, and then use the new formula.
          var diffToNextSlog = Math.log10(Math.log(1e10)/Math.log(result.mag), 10);
          if (diffToNextSlog < diff)
          {
            result.mag = Math.log10(1e10);
            result.layer++;
            diff -= diffToNextSlog;
          }
          
          result.mag = Math.pow(result.mag, Math.pow(10, diff));
          
          while (subtractlayerslater > 0)
          {
            result.mag = Math.log10(result.mag);
            --subtractlayerslater;
          }
        }
        else if (diff < 0)
        {
          var subtractlayerslater = 0;
          
          while (Number.isFinite(result.mag) && result.mag < 10)
          {
            result.mag = Math.pow(10, result.mag);
            ++subtractlayerslater;
          }
          
          if (result.mag > 1e10)
          {
            result.mag = Math.log10(result.mag);
            result.layer++;
          }
          
          var diffToNextSlog = Math.log10(1/Math.log10(result.mag));
          if (diffToNextSlog > diff)
          {
            result.mag = 1e10;
            result.layer--;
            diff -= diffToNextSlog;
          }
          
          result.mag = Math.pow(result.mag, Math.pow(10, diff));
          
          while (subtractlayerslater > 0)
          {
            result.mag = Math.log10(result.mag);
            --subtractlayerslater;
          }
        }
        
        while (result.layer < 0)
        {
          result.layer++;
          result.mag = Math.log10(result.mag);
        }
        result.normalize();
        return result;
      }
      
      //layeradd: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 'base' and iterated log base 'base'.
      Decimal.prototype.layeradd = function(diff, base) {
        var slogthis = this.slog(base).toNumber();
        var slogdest = slogthis+diff;
        if (slogdest >= 0)
        {
          return Decimal.tetrate(base, slogdest);
        }
        else if (!Number.isFinite(slogdest))
        {
          return Decimal.dNaN;
        }
        else if (slogdest >= -1)
        {
          return Decimal.log(Decimal.tetrate(base, slogdest+1), base);
        }
        else
        {
          Decimal.log(Decimal.log(Decimal.tetrate(base, slogdest+2), base), base);
        }
      }
      
      //The Lambert W function, also called the omega function or product logarithm, is the solution W(x) === x*e^x.
      // https://en.wikipedia.org/wiki/Lambert_W_function
      //Some special values, for testing: https://en.wikipedia.org/wiki/Lambert_W_function#Special_values
      Decimal.prototype.lambertw = function() {
        if (this.lt(-0.3678794411710499))
        {
          throw Error("lambertw is unimplemented for results less than -1, sorry!");
        }
        else if (this.mag < 0)
        {
          return D(f_lambertw(this.toNumber()));
        }
        else if (this.layer === 0)
        {
          return D(f_lambertw(this.sign*this.mag));
        }
        else if (this.layer === 1)
        {
          return d_lambertw(this);
        }
        else if (this.layer === 2)
        {
          return d_lambertw(this);
        }
        if (this.layer >= 3)
        {
          return FC_NN(this.sign, this.layer-1, this.mag);
        }
      }
    
      //from https://github.com/scipy/scipy/blob/8dba340293fe20e62e173bdf2c10ae208286692f/scipy/special/lambertw.pxd
      // The evaluation can become inaccurate very close to the branch point
      // at ``-1/e``. In some corner cases, `lambertw` might currently
      // fail to converge, or can end up on the wrong branch.
      var d_lambertw = function(z, tol = 1e-10) {
      var w;
      var ew, wew, wewz, wn;
      
      if (!Number.isFinite(z.mag)) { return z; }
      if (z === 0)
      {
        return z;
      }
      if (z === 1)
      {
        //Split out this case because the asymptotic series blows up
        return OMEGA;
      }
      
      var absz = Decimal.abs(z);
      //Get an initial guess for Halley's method
      w = Decimal.ln(z);
      
      //Halley's method; see 5.9 in [1]
      
      for (var i = 0; i < 100; ++i)
      {
        ew = Decimal.exp(-w);
        wewz = w.sub(z.mul(ew));
        wn = w.sub(wewz.div(w.add(1).sub((w.add(2)).mul(wewz).div((Decimal.mul(2, w).add(2))))));
        if (Decimal.abs(wn.sub(w)).lt(Decimal.abs(wn).mul(tol)))
        {
          return wn;
        }
        else
        {
          w = wn;
        }
      }
      
      throw Error("Iteration failed to converge: " + z);
      //return Decimal.dNaN;
      }
      
      //The super square-root function - what number, tetrated to height 2, equals this?
      //Other sroots are possible to calculate probably through guess and check methods, this one is easy though.
      // https://en.wikipedia.org/wiki/Tetration#Super-root
      Decimal.prototype.ssqrt = function() {
        if (this.sign == 1 && this.layer >= 3)
        {
            return FC_NN(this.sign, this.layer-1, this.mag)
        }
        var lnx = this.ln();
        return lnx.div(lnx.lambertw());
      }
  /*
  
  Unit tests for tetrate/iteratedexp/iteratedlog/layeradd10/layeradd/slog:
  
  for (var i = 0; i < 1000; ++i)
  {
      var first = Math.random()*100;
      var both = Math.random()*100;
      var expected = first+both+1;
      var result = new Decimal(10).layeradd10(first).layeradd10(both).slog();
      if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))
      {
          console.log(first + ", " + both);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var first = Math.random()*100;
      var both = Math.random()*100;
      first += both;
      var expected = first-both+1;
      var result = new Decimal(10).layeradd10(first).layeradd10(-both).slog();
      if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))
      {
          console.log(first + ", " + both);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var first = Math.random()*100;
      var both = Math.random()*100;
      var base = Math.random()*8+2;
      var expected = first+both+1;
      var result = new Decimal(base).layeradd(first, base).layeradd(both, base).slog(base);
      if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))
      {
          console.log(first + ", " + both);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var first = Math.random()*100;
      var both = Math.random()*100;
      var base = Math.random()*8+2;
      first += both;
      var expected = first-both+1;
      var result = new Decimal(base).layeradd(first, base).layeradd(-both, base).slog(base);
      if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))
      {
          console.log(first + ", " + both);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var first = Math.round((Math.random()*30))/10;
      var both = Math.round((Math.random()*30))/10;
      var tetrateonly = Decimal.tetrate(10, first);
      var tetrateandlog = Decimal.tetrate(10, first+both).iteratedlog(10, both);
      if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))
      {
          console.log(first + ", " + both);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var first = Math.round((Math.random()*30))/10;
      var both = Math.round((Math.random()*30))/10;
    var base = Math.random()*8+2;
      var tetrateonly = Decimal.tetrate(base, first);
      var tetrateandlog = Decimal.tetrate(base, first+both).iteratedlog(base, both);
      if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))
      {
          console.log(first + ", " + both);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var first = Math.round((Math.random()*30))/10;
      var both = Math.round((Math.random()*30))/10;
    var base = Math.random()*8+2;
      var tetrateonly = Decimal.tetrate(base, first, base);
      var tetrateandlog = Decimal.tetrate(base, first+both, base).iteratedlog(base, both);
      if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))
      {
          console.log(first + ", " + both);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var xex = new Decimal(-0.3678794411710499+Math.random()*100);
      var x = Decimal.lambertw(xex);
      if (!Decimal.eq_tolerance(xex, x.mul(Decimal.exp(x))))
      {
          console.log(xex);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var xex = new Decimal(-0.3678794411710499+Math.exp(Math.random()*100));
      var x = Decimal.lambertw(xex);
      if (!Decimal.eq_tolerance(xex, x.mul(Decimal.exp(x))))
      {
          console.log(xex);
      }
  }
  
  for (var i = 0; i < 1000; ++i)
  {
      var a = Decimal.randomDecimalForTesting(Math.random() > 0.5 ? 0 : 1);
      var b = Decimal.randomDecimalForTesting(Math.random() > 0.5 ? 0 : 1);
      if (Math.random() > 0.5) { a = a.recip(); }
      if (Math.random() > 0.5) { b = b.recip(); }
      var c = a.add(b).toNumber();
      if (Number.isFinite(c) && !Decimal.eq_tolerance(c, a.toNumber()+b.toNumber()))
      {
          console.log(a + ", " + b);
      }
  }
  
  for (var i = 0; i < 100; ++i)
  {
      var a = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));
      var b = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));
      if (Math.random() > 0.5) { a = a.recip(); }
      if (Math.random() > 0.5) { b = b.recip(); }
      var c = a.mul(b).toNumber();
      if (Number.isFinite(c) && Number.isFinite(a.toNumber()) && Number.isFinite(b.toNumber()) && a.toNumber() != 0 && b.toNumber() != 0 && c != 0 && !Decimal.eq_tolerance(c, a.toNumber()*b.toNumber()))
      {
          console.log("Test 1: " + a + ", " + b);
      }
      else if (!Decimal.mul(a.recip(), b.recip()).eq_tolerance(Decimal.mul(a, b).recip()))
      {
          console.log("Test 3: " + a + ", " + b);
      }
  }
  
  for (var i = 0; i < 10; ++i)
  {
      var a = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));
      var b = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));
      if (Math.random() > 0.5 && a.sign !== 0) { a = a.recip(); }
      if (Math.random() > 0.5 && b.sign !== 0) { b = b.recip(); }
      var c = a.pow(b);
      var d = a.root(b.recip());
      var e = a.pow(b.recip());
      var f = a.root(b);
      
      if (!c.eq_tolerance(d) && a.sign !== 0 && b.sign !== 0)
      {
        console.log("Test 1: " + a + ", " + b);
      }
      if (!e.eq_tolerance(f) && a.sign !== 0 && b.sign !== 0)
      {
        console.log("Test 2: " + a + ", " + b);
      }
  }
  
  for (var i = 0; i < 10; ++i)
  {
      var a = Math.round(Math.random()*18-9);
      var b = Math.round(Math.random()*100-50);
      var c = Math.round(Math.random()*18-9);
      var d = Math.round(Math.random()*100-50);
      console.log("Decimal.pow(Decimal.fromMantissaExponent(" + a + ", " + b + "), Decimal.fromMantissaExponent(" + c + ", " + d + ")).toString()");
  }
  
  */
      
      //Pentation/pentate: The result of tetrating 'height' times in a row. An absurdly strong operator - Decimal.pentate(2, 4.28) and Decimal.pentate(10, 2.37) are already too huge for break_eternity.js!
      // https://en.wikipedia.org/wiki/Pentation
      Decimal.prototype.pentate = function(height = 2, payload = FC_NN(1, 0, 1)) {
        payload = D(payload);
        var oldheight = height;
        height = Math.trunc(height);
        var fracheight = oldheight-height;
        
        //I have no idea if this is a meaningful approximation for pentation to continuous heights, but it is monotonic and continuous.
        if (fracheight !== 0)
        {
          if (payload.eq(Decimal.dOne))
          {
            ++height;
            payload = new Decimal(fracheight);
          }
          else
          {
            if (this.eq(10))
            {
              payload = payload.layeradd10(fracheight);
            }
            else
            {
              payload = payload.layeradd(fracheight, this);
            }
          }
        }
        
        for (var i = 0; i < height; ++i)
        {
          payload = this.tetrate(payload);
          //bail if we're NaN
          if (!isFinite(payload.layer) || !isFinite(payload.mag)) { return payload; }
          //give up after 10 iterations if nothing is happening
          if (i > 10) { return payload; }
        }
        
        return payload;
      }
      
      // trig functions!
      Decimal.prototype.sin = function () {
        if (this.mag < 0) { return this; }
        if (this.layer === 0) { return D(Math.sin(this.sign*this.mag)); }
        return FC_NN(0, 0, 0);
      };
  
      Decimal.prototype.cos = function () {
        if (this.mag < 0) { return Decimal.dOne; }
        if (this.layer === 0) { return D(Math.cos(this.sign*this.mag)); }
        return FC_NN(0, 0, 0);
      };
  
      Decimal.prototype.tan = function () {
        if (this.mag < 0) { return this; }
        if (this.layer === 0) { return D(Math.tan(this.sign*this.mag)); }
        return FC_NN(0, 0, 0);
      };
  
      Decimal.prototype.asin = function () {
        if (this.mag < 0) { return this; }
        if (this.layer === 0) { return D(Math.asin(this.sign*this.mag)); }
        return FC_NN(Number.NaN, Number.NaN, Number.NaN);
      };
  
      Decimal.prototype.acos = function () {
        if (this.mag < 0) { return D(Math.acos(this.toNumber())); }
        if (this.layer === 0) { return D(Math.acos(this.sign*this.mag)); }
        return FC_NN(Number.NaN, Number.NaN, Number.NaN);
      };
  
      Decimal.prototype.atan = function () {
        if (this.mag < 0) { return this; }
        if (this.layer === 0) { return D(Math.atan(this.sign*this.mag)); }
        return D(Math.atan(this.sign*1.8e308));
      };
  
      Decimal.prototype.sinh = function () {
        return this.exp().sub(this.negate().exp()).div(2);
      };
  
      Decimal.prototype.cosh = function () {
        return this.exp().add(this.negate().exp()).div(2);
      };
  
      Decimal.prototype.tanh = function () {
        return this.sinh().div(this.cosh());
      };
  
      Decimal.prototype.asinh = function () {
        return Decimal.ln(this.add(this.sqr().add(1).sqrt()));
      };
  
      Decimal.prototype.acosh = function () {
        return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));
      };
  
      Decimal.prototype.atanh = function () {
        if (this.abs().gte(1)) {
          return FC_NN(Number.NaN, Number.NaN, Number.NaN);
        }
  
        return Decimal.ln(this.add(1).div(D(1).sub(this))).div(2);
      };
      
      /**
       * Joke function from Realm Grinder
       */
      Decimal.prototype.ascensionPenalty = function (ascensions) {
        if (ascensions === 0) {
          return this;
        }
  
        return this.root(Decimal.pow(10, ascensions));
      };
      
      /**
       * Joke function from Cookie Clicker. It's 'egg'
       */
      Decimal.prototype.egg = function () {
        return this.add(9);
      };
      
      Decimal.prototype.lessThanOrEqualTo = function (other) {
        return this.cmp(other) < 1;
      };
  
      Decimal.prototype.lessThan = function (other) {
        return this.cmp(other) < 0;
      };
  
      Decimal.prototype.greaterThanOrEqualTo = function (other) {
        return this.cmp(other) > -1;
      };
  
      Decimal.prototype.greaterThan = function (other) {
        return this.cmp(other) > 0;
      };
  
      return Decimal;
    }();
  
      Decimal.dZero = FC_NN(0, 0, 0);
      Decimal.dOne = FC_NN(1, 0, 1);
      Decimal.dNegOne = FC_NN(-1, 0, 1);
      Decimal.dTwo = FC_NN(1, 0, 2);
      Decimal.dTen = FC_NN(1, 0, 10);
      Decimal.dNaN = FC_NN(Number.NaN, Number.NaN, Number.NaN);
      Decimal.dInf = FC_NN(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);
      Decimal.dNegInf = FC_NN(-1, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);
    Decimal.dNumberMax = FC(1, 0, Number.MAX_VALUE);
    Decimal.dNumberMin = FC(1, 0, Number.MIN_VALUE);
    
    return Decimal;
  
  }));
  
function exponentialFormat(num, precision, mantissa = true) {commaFormat
    let e = num.log10().floor()
    let m = num.div(Decimal.pow(10, e))
    if (m.toStringWithDecimalPlaces(precision) == 10) {
        m = new Decimal(1)
        e = e.add(1)
    }
    e = (e.gte(1e9) ? format(e, 3) : (e.gte(10000) ? (e, 0) : e.toStringWithDecimalPlaces(0)))
    if (mantissa)
        return m.toStringWithDecimalPlaces(precision) + "e" + e
    else return "e" + e
}

function commaFormat(num, precision) {
    if (num === null || num === undefined) return "NaN"
    if (num.mag < 0.001) return (0).toFixed(precision)
    let init = num.toStringWithDecimalPlaces(precision)
    let portions = init.split(".")
    portions[0] = portions[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,")
    if (portions.length == 1) return portions[0]
    return portions[0] + "." + portions[1]
}


function regularFormat(num, precision) {
    if (num === null || num === undefined) return "NaN"
    if (num.mag < 0.0001) return (0).toFixed(precision)
    if (num.mag < 0.1 && precision !==0) precision = Math.max(precision, 4)
    return num.toStringWithDecimalPlaces(precision)
}

function fixValue(x, y = 0) {
    return x || new Decimal(y)
}

function sumValues(x) {
    x = Object.values(x)
    if (!x[0]) return decimalZero
    return x.reduce((a, b) => Decimal.add(a, b))
}

function format(decimal, precision = 2, small) {
    small = small
    decimal = new Decimal(decimal)
    if (decimal.sign < 0) return "-" + format(decimal.neg(), precision, small)
    if (decimal.mag == Number.POSITIVE_INFINITY) return "Infinity"
    if (decimal.gte("eeee1000")) {
        var slog = decimal.slog()
        return Decimal.pow(10, slog.sub(slog.floor())).toStringWithDecimalPlaces(3) + "F" + commaFormat(slog.floor(), 0)
    }
    else if (decimal.gte("1e1000000")) return exponentialFormat(decimal, 0, false)
    else if (decimal.gte("1e10000")) return exponentialFormat(decimal, 0)
    else if (decimal.gte(1e42)) return exponentialFormat(decimal, precision)
    else if (decimal.gte(1e39)) return formatWhole(Math.floor((decimal / 1e39)*100))/100+"Duodectillion"
    else if (decimal.gte(1e36)) return formatWhole(Math.floor((decimal / 1e36)*100))/100+"Undectillion"
    else if (decimal.gte(1e33)) return formatWhole(Math.floor((decimal / 1e33)*100))/100+"Dectillion"
    else if (decimal.gte(1e30)) return formatWhole(Math.floor((decimal / 1e30)*100))/100+"Noventillion"
    else if (decimal.gte(1e27)) return formatWhole(Math.floor((decimal / 1e27)*100))/100+"Octillion"
    else if (decimal.gte(1e24)) return formatWhole(Math.floor((decimal / 1e24)*100))/100+"Septillion"
    else if (decimal.gte(1e21)) return formatWhole(Math.floor((decimal / 1e21)*100))/100+"Sextillion"
    else if (decimal.gte(1e18)) return formatWhole(Math.floor((decimal / 1e18)*100))/100+"Quintillion"
    else if (decimal.gte(1e15)) return formatWhole(Math.floor((decimal / 1e15)*100))/100+"Quadrillion"
    else if (decimal.gte(1e12)) return formatWhole(Math.floor((decimal / 1e12)*100))/100+"Trillion"
    else if (decimal.gte(1e9)) return formatWhole(Math.floor((decimal / 1e9)*100))/100+"Billion"
    else if (decimal.gte(1e6)) return formatWhole(Math.floor((decimal / 1e6)*100))/100+"Million"
    else if (decimal.gte(0.0001) || !small) return regularFormat(decimal, precision)
    else if (decimal.eq(0)) return (0).toFixed(precision)

    decimal = invertOOM(decimal)
    let val = ""
    if (decimal.lt("1e1000")){
        val = exponentialFormat(decimal, precision)
        return val.replace(/([^(?:e|F)]*)$/, '-$1')
    }
    else   
        return format(decimal, precision) + "⁻¹"

}

function formatWhole(decimal) {
    decimal = new Decimal(decimal)
    if (decimal.gte(1e9)) return format(decimal, 2)
    if (decimal.lte(0.99) && !decimal.eq(0)) return format(decimal, 2)
    return format(decimal, 0)
}

function formatTime(s) {
    if (s < 60) return format(s) + "s"
    else if (s < 3600) return formatWhole(Math.floor(s / 60)) + "m " + format(s % 60) + "s"
    else if (s < 86400) return formatWhole(Math.floor(s / 3600)) + "h " + formatWhole(Math.floor(s / 60) % 60) + "m " + format(s % 60) + "s"
    else if (s < 31536000) return formatWhole(Math.floor(s / 86400) % 365) + "d " + formatWhole(Math.floor(s / 3600) % 24) + "h " + formatWhole(Math.floor(s / 60) % 60) + "m " + format(s % 60) + "s"
    else return formatWhole(Math.floor(s / 31536000)) + "y " + formatWhole(Math.floor(s / 86400) % 365) + "d " + formatWhole(Math.floor(s / 3600) % 24) + "h " + formatWhole(Math.floor(s / 60) % 60) + "m " + format(s % 60) + "s"
}

function toPlaces(x, precision, maxAccepted) {
    x = new Decimal(x)
    let result = x.toStringWithDecimalPlaces(precision)
    if (new Decimal(result).gte(maxAccepted)) {
        result = new Decimal(maxAccepted - Math.pow(0.1, precision)).toStringWithDecimalPlaces(precision)
    }
    return result
}

// Will also display very small numbers
function formatSmall(x, precision=2) { 
    return format(x, precision, true)    
}

function invertOOM(x){
    let e = x.log10().ceil()
    let m = x.div(Decimal.pow(10, e))
    e = e.neg()
    x = new Decimal(10).pow(e).times(m)

    return x
}


window.onload=function(){
  userData = JSON.parse(window.localStorage["gameStateData"]);
  if(userData.ppUpg === undefined||userData.ppUpg===null) userData.ppUpg = []
  if(userData.GongfaS1Level === undefined) userData.GongfaS1Level = new Decimal(0)
  if(userData.GongfaS2Level === undefined) userData.GongfaS2Level = new Decimal(0)
  if(userData.GongfaS3Level === undefined) userData.GongfaS3Level = new Decimal(0)
  if(userData.Lingqi === undefined||userData.Lingqi<100) userData.Lingqi = new Decimal(100)
  if(userData.totalLingqi === undefined) userData.totalLingqi = new Decimal(100)
  if(userData.LingqiPerSec === undefined) userData.LingqiPerSec = new Decimal(0)
  if(userData.XiuweiPerSec === undefined) userData.XiuweiPerSec = new Decimal(0)
  if(userData.Lingshi === undefined) userData.Lingshi = new Decimal(0)
  if(userData.Xiuwei === undefined) userData.Xiuwei = new Decimal(0)
  if(userData.Jingjieid === undefined) userData.Jingjieid = new Decimal(1)
  if(userData.PrestigePoints === undefined) userData.PrestigePoints = new Decimal(0)
  if(userData.PrestigeTimes === undefined) userData.PrestigeTimes = new Decimal(0)
  if(userData.Xinmo === undefined) userData.Xinmo = new Decimal(0)
  if(userData.totalXinmo === undefined) userData.totalXinmo = new Decimal(0)
  if(userData.XinmoBuyable1 === undefined) userData.XinmoBuyable1 = new Decimal(0)
  if(userData.XinmoBuyable2 === undefined) userData.XinmoBuyable2 = new Decimal(0)
  if(userData.XinmoBuyable3 === undefined) userData.XinmoBuyable3 = new Decimal(0)
  if(userData.XinmoBuyable4 === undefined) userData.XinmoBuyable4 = new Decimal(0)
  if(userData.XinmoBuyable5 === undefined) userData.XinmoBuyable5 = new Decimal(0)
  if(userData.XinmoBuyable6 === undefined) userData.XinmoBuyable6 = new Decimal(0)
  if(userData.XinmoBuyable7 === undefined) userData.XinmoBuyable7 = new Decimal(0)
  if(userData.XinmoBuyable8 === undefined) userData.XinmoBuyable8 = new Decimal(0)
  if(userData.XinmoBuyable9 === undefined) userData.XinmoBuyable9 = new Decimal(0)
  if(userData.ppUpg === undefined||userData.ppUpg===null) userData.ppUpg = []
  if(userData.Jingjie === undefined) userData.Jingjie = '练气1阶'
  if(userData.XiulianBalance === undefined) userData.XiulianBalance = new Decimal(0)
    option1()

  
  for(i=1;i<=16;i++)
      {
        if(userData["Gongfa"+i+"Level"] === undefined) userData["Gongfa"+i+"Level"] = new Decimal(0)
    }
    for(i=1;i<=9;i++)
      {
        if(userData["Julingzhen"+i+"Level"] === undefined) userData["Julingzhen"+i+"Level"] = new Decimal(0)
        if(userData["Julingzhen"+i+"Freeze"] === undefined) userData["Julingzhen"+i+"Freeze"] = JulingzhenFreeze[i]
        if(userData["Julingzhen"+i+"FreezeLimit"] === undefined) userData["Julingzhen"+i+"FreezeLimit"] = JulingzhenFreeze[i]
    }
  
  getAchievement()
  }
  
News = ["作者：爆更的Jing雯萱436(其实别名还有很多，这里就不一一列举了)","凡界的修为容纳上限是1.8e308，如果超过这个数值，凡界将无法承载你强大的仙力，你会羽化飞升...","这个游戏不太平衡？也许只是其他游戏太平衡了罢...","Spasmodic Igallta Rrhar'il","转生点数的获取与你境界的1.05次方、灵气的立方根成正比。","To The INFINITY!!!","作者的境界是虚无掌控者大天尊巅峰大圆满15阶，修为F1.8e308，灵气F1.8e308，灵石F1.8e308","截至上次版本更新，作者一共在g8hh上发布了 2 款放置游戏。","修仙路漫漫，道友在修真途中切记不可心急哦","如果你的修炼遇到了瓶颈，不妨试试转生","11/26是作者的生日,每年这个日子作者都会在游戏里加些小彩蛋哦","如果玩这个游戏玩累了,不妨休息一下,喝一点脱碳甲醛吧!","作者目前的年龄和尊师IN的定数相当","反物质就像在玩赛车游戏，但是和一般的赛车游戏不一样：不止跑道两边是墙，跑道上也是墙，只不过跑道上的墙比较薄,你必须把用头把墙都撞碎了才能过","childish-----s*********"]
XiulianCost = [new Decimal(0),new Decimal(150),new Decimal(245),new Decimal(900),new Decimal(5500),new Decimal(15000),new Decimal(33000),new Decimal(90000),new Decimal(650000),new Decimal(420000),new Decimal(880000),new Decimal(2880000),new Decimal(1e7),new Decimal(6.5e6),new Decimal(9.8e6),new Decimal(5e7),new Decimal(3.33e8),new Decimal(1.5e8),new Decimal(3e8),new Decimal(9e8),new Decimal(4.5e9),new Decimal(1e13),new Decimal(1e15),new Decimal(1e16),new Decimal(1e18),new Decimal(1e14),new Decimal(1e16),new Decimal(1e20),new Decimal(1e23),new Decimal(1e27),new Decimal(1e29),new Decimal(1e34),new Decimal(1e39),new Decimal(1e38),new Decimal(1e40),new Decimal(1e43),new Decimal(1e46),new Decimal(1e80),new Decimal(1e90),new Decimal(1e100),new Decimal(1e120),new Decimal(1e125),new Decimal(1e140),new Decimal(1e160),new Decimal(1e180)]
XiulianEffect = [new Decimal(0),new Decimal(100),new Decimal(125),new Decimal(255),new Decimal(600),new Decimal(2000),new Decimal(3200),new Decimal(4900),new Decimal(13500),new Decimal(27000),new Decimal(44000),new Decimal(120000),new Decimal(300000),new Decimal(140000),new Decimal(190000),new Decimal(700000),new Decimal(2250000),new Decimal(1000000),new Decimal(1400000),new Decimal(3500000),new Decimal(11000000),new Decimal(4e9),new Decimal(4e10),new Decimal(1e12),new Decimal(3e13),new Decimal(1e11),new Decimal(6e11),new Decimal(5e13),new Decimal(3e14),new Decimal(1e15),new Decimal(3e15),new Decimal(2e16),new Decimal(5e17),new Decimal(1e18),new Decimal(2e19),new Decimal(4e20),new Decimal(8e21),new Decimal(1e23),new Decimal(2e24),new Decimal(4e25),new Decimal(8e26),new Decimal(1e29),new Decimal(2e30),new Decimal(4e32),new Decimal(8e34)]
JulingzhenFreeze = [new Decimal(0),new Decimal(3),new Decimal(5),new Decimal(10),new Decimal(15),new Decimal(35),new Decimal(50),new Decimal(75),new Decimal(100),new Decimal(120)]
Gongfa1cost = [new Decimal(100),new Decimal(500),new Decimal(1000),new Decimal(3000),new Decimal(8000),new Decimal(15000),new Decimal(30000),new Decimal(60000),new Decimal(100000),new Decimal(150000),new Decimal("eee100")]
Gongfa2cost = [new Decimal(5000),new Decimal(9000),new Decimal(20000),new Decimal(35000),new Decimal(100000),new Decimal(250000),new Decimal(400000),new Decimal(1000000),new Decimal(1550000),new Decimal(2500000),new Decimal("eee100")]
Gongfa3cost = [new Decimal(30000),new Decimal(50000),new Decimal(80000),new Decimal(150000),new Decimal(300000),new Decimal(500000),new Decimal(800000),new Decimal(2000000),new Decimal(3100000),new Decimal(5000000),new Decimal("eee100")]
Gongfa4cost = [new Decimal(80000),new Decimal(120000),new Decimal(200000),new Decimal(300000),new Decimal(650000),new Decimal(1250000),new Decimal(2700000),new Decimal(5000000),new Decimal(9000000),new Decimal(15000000),new Decimal("eeee100")]
Gongfa5cost = [new Decimal(1000000),new Decimal(1500000),new Decimal(2100000),new Decimal(3000000),new Decimal(3800000),new Decimal(5500000),new Decimal(8000000),new Decimal(13000000),new Decimal(20000000),new Decimal(35000000),new Decimal("eeee100")]
Gongfa6cost = [new Decimal(5000000),new Decimal(6500000),new Decimal(9000000),new Decimal(12000000),new Decimal(18000000),new Decimal(35000000),new Decimal(70000000),new Decimal(130000000),new Decimal(190000000),new Decimal(250000000),new Decimal("eeee100")]
Gongfa7cost = [new Decimal(30000000),new Decimal(50000000),new Decimal(75000000),new Decimal(100000000),new Decimal(135000000),new Decimal(180000000),new Decimal(250000000),new Decimal(400000000),new Decimal(800000000),new Decimal(1000000000),new Decimal("eeee100")]
Gongfa8cost = [new Decimal(8e7),new Decimal(1e8),new Decimal(1.5e8),new Decimal(2.2e8),new Decimal(3.3e8),new Decimal(4.5e8),new Decimal(6e8),new Decimal(8e8),new Decimal(1.2e9),new Decimal(2e9),new Decimal("eeee100")]
Gongfa9cost = [new Decimal(1.5e8),new Decimal(2e8),new Decimal(3e8),new Decimal(4.5e8),new Decimal(6.8e8),new Decimal(9e8),new Decimal(1.2e9),new Decimal(1.6e9),new Decimal(3e9),new Decimal(5e9),new Decimal("eeee100")]
Gongfa10cost = [new Decimal(1e10),new Decimal(4e10),new Decimal(9e10),new Decimal(1.3e11),new Decimal(2.5e11),new Decimal(5e11),new Decimal(8e11),new Decimal(1e12),new Decimal(1.2e12),new Decimal(1.4e12),new Decimal("eeee100")]
Gongfa11cost = [new Decimal(1e16),new Decimal(4e16),new Decimal(9e16),new Decimal(1.3e17),new Decimal(2.7e17),new Decimal(4e17),new Decimal(8e17),new Decimal(1e18),new Decimal(1.2e19),new Decimal(1.4e20),new Decimal("eeee100")]
Gongfa12cost = [new Decimal(1e20),new Decimal(4e20),new Decimal(9e20),new Decimal(1.3e21),new Decimal(2.7e21),new Decimal(4e21),new Decimal(8e21),new Decimal(1e22),new Decimal(1.2e23),new Decimal(1.4e24),new Decimal("eeee100")]
Gongfa13cost = [new Decimal(1e30),new Decimal(4e30),new Decimal(2e31),new Decimal(6e31),new Decimal(2.7e32),new Decimal(8e32),new Decimal(9e33),new Decimal(3e34),new Decimal(1.2e35),new Decimal(1.4e36),new Decimal("eeee100")]
Gongfa14cost = [new Decimal(1e44),new Decimal(4e45),new Decimal(2e46),new Decimal(6e47),new Decimal(2.7e48),new Decimal(8e49),new Decimal(9e50),new Decimal(3e51),new Decimal(1.2e52),new Decimal(1.4e54),new Decimal("eeee100")]
Gongfa15cost = [new Decimal(1e70),new Decimal(4e75),new Decimal(2e80),new Decimal(6e83),new Decimal(2.7e88),new Decimal(8e95),new Decimal(9e103),new Decimal(3e106),new Decimal(1.2e110),new Decimal(1.4e114),new Decimal("eeee100")]
Gongfa16cost = [new Decimal(1e130),new Decimal(4e135),new Decimal(2e140),new Decimal(6e145),new Decimal(2.7e150),new Decimal(8e155),new Decimal(9e160),new Decimal(3e165),new Decimal(1.2e170),new Decimal(1.4e175),new Decimal("eeee100")]
Julingzhen1cost = [new Decimal(1000),new Decimal(3000),new Decimal(8000),new Decimal(15000),new Decimal(30000),new Decimal(60000),new Decimal(100000),new Decimal(150000),new Decimal(220000),new Decimal(300000),new Decimal(400000),new Decimal(550000),new Decimal(750000),new Decimal(1100000),new Decimal(1500000),new Decimal(2000000),new Decimal(3000000),new Decimal(4500000),new Decimal(7000000),new Decimal("eee100")]
Julingzhen2cost = [new Decimal(5000),new Decimal(10000),new Decimal(30000),new Decimal(100000),new Decimal(250000),new Decimal(400000),new Decimal(600000),new Decimal(800000),new Decimal(1000000),new Decimal(1300000),new Decimal(1750000),new Decimal(2300000),new Decimal(3000000),new Decimal(4000000),new Decimal(5500000),new Decimal(7500000),new Decimal(1e7),new Decimal(1.5e7),new Decimal(2.1e7),new Decimal("eee100")]
Julingzhen3cost = [new Decimal(30000),new Decimal(100000),new Decimal(350000),new Decimal(600000),new Decimal(900000),new Decimal(1300000),new Decimal(1900000),new Decimal(2400000),new Decimal(3000000),new Decimal(3800000),new Decimal(4700000),new Decimal(6000000),new Decimal(8000000),new Decimal(11000000),new Decimal(15000000),new Decimal(20000000),new Decimal(2.7e7),new Decimal(3.5e7),new Decimal(5e7),new Decimal("eee100")]
Julingzhen4cost = [new Decimal(200000),new Decimal(500000),new Decimal(1000000),new Decimal(1700000),new Decimal(2800000),new Decimal(4300000),new Decimal(6000000),new Decimal(8400000),new Decimal(1e7),new Decimal(1.2e7),new Decimal(1.5e7),new Decimal(1.9e7),new Decimal(2.5e7),new Decimal(3.3e7),new Decimal(4e7),new Decimal(5e7),new Decimal(6.5e7),new Decimal(8.5e7),new Decimal(1.1e8),new Decimal("eee100")]
Julingzhen5cost = [new Decimal(1000000),new Decimal(3000000),new Decimal(8000000),new Decimal(1.5e7),new Decimal(3e7),new Decimal(6e7),new Decimal(1e8),new Decimal(1.5e8),new Decimal(2.2e8),new Decimal(3e8),new Decimal(4e8),new Decimal(5.5e8),new Decimal(7.5e8),new Decimal(1e9),new Decimal(1.3e9),new Decimal(1.7e9),new Decimal(2.2e9),new Decimal(2.8e9),new Decimal(3.5e9),new Decimal("eee100")]
Julingzhen6cost = [new Decimal(5000000),new Decimal(1e7),new Decimal(3e7),new Decimal(1e8),new Decimal(2.5e8),new Decimal(4e8),new Decimal(6e8),new Decimal(8e8),new Decimal(1e9),new Decimal(1.3e9),new Decimal(1.75e9),new Decimal(2.3e9),new Decimal(3e9),new Decimal(3.8e9),new Decimal(5e9),new Decimal(6.5e9),new Decimal(8.5e9),new Decimal(1.1e10),new Decimal(1.5e10),new Decimal("eee100")]
Julingzhen7cost = [new Decimal(3e7),new Decimal(1e8),new Decimal(3.5e8),new Decimal(6e8),new Decimal(9e8),new Decimal(1.3e9),new Decimal(1.9e9),new Decimal(2.4e9),new Decimal(3e9),new Decimal(3.8e9),new Decimal(4.6e9),new Decimal(5.5e9),new Decimal(7e9),new Decimal(9e9),new Decimal(1.2e10),new Decimal(1.7e10),new Decimal(2.5e10),new Decimal(3.5e10),new Decimal(5.5e10),new Decimal("eee100")]
Julingzhen8cost = [new Decimal(1e8),new Decimal(5e8),new Decimal(1e9),new Decimal(1.7e9),new Decimal(2.8e9),new Decimal(4.3e9),new Decimal(6e9),new Decimal(8.4e9),new Decimal(1e10),new Decimal(1.2e10),new Decimal(1.5e10),new Decimal(2e10),new Decimal(2.75e10),new Decimal(3.7e10),new Decimal(5e10),new Decimal(7e10),new Decimal(1e11),new Decimal(1.8e11),new Decimal(3e11),new Decimal("eee100")]
Julingzhen9cost = [new Decimal(3e8),new Decimal(7e8),new Decimal(1.5e9),new Decimal(3e9),new Decimal(6e9),new Decimal(1e10),new Decimal(2.5e10),new Decimal(4.5e10),new Decimal(7e10),new Decimal(1e11),new Decimal(1.6e11),new Decimal(3e11),new Decimal(5e11),new Decimal(8e11),new Decimal(1.4e12),new Decimal(2.8e12),new Decimal(5e12),new Decimal(8e12),new Decimal(1.1e13),new Decimal("eee100")]
Gongfa1effect = [new Decimal(0),new Decimal(20),new Decimal(30),new Decimal(50),new Decimal(100),new Decimal(170),new Decimal(260),new Decimal(420),new Decimal(640),new Decimal(900),new Decimal(1300)]
Gongfa2effect = [new Decimal(0),new Decimal(60),new Decimal(100),new Decimal(160),new Decimal(280),new Decimal(440),new Decimal(700),new Decimal(1100),new Decimal(1600),new Decimal(2400),new Decimal(3600)]
Gongfa3effect = [new Decimal(0),new Decimal(80),new Decimal(180),new Decimal(260),new Decimal(600),new Decimal(1000),new Decimal(1500),new Decimal(2200),new Decimal(3100),new Decimal(4500),new Decimal(6500)]
Gongfa4effect = [new Decimal(0),new Decimal(100),new Decimal(240),new Decimal(300),new Decimal(800),new Decimal(1300),new Decimal(1900),new Decimal(3100),new Decimal(5500),new Decimal(8300),new Decimal(12000)]
Gongfa5effect = [new Decimal(0),new Decimal(1000),new Decimal(1500),new Decimal(2500),new Decimal(5000),new Decimal(8500),new Decimal(13000),new Decimal(21000),new Decimal(32000),new Decimal(45000),new Decimal(65000)]
Gongfa6effect = [new Decimal(0),new Decimal(3000),new Decimal(5000),new Decimal(8000),new Decimal(14000),new Decimal(22000),new Decimal(35000),new Decimal(55000),new Decimal(80000),new Decimal(120000),new Decimal(180000)]
Gongfa7effect = [new Decimal(0),new Decimal(5000),new Decimal(10000),new Decimal(18000),new Decimal(40000),new Decimal(75000),new Decimal(130000),new Decimal(200000),new Decimal(310000),new Decimal(450000),new Decimal(650000)]
Gongfa8effect = [new Decimal(0),new Decimal(8500),new Decimal(16000),new Decimal(30000),new Decimal(60000),new Decimal(110000),new Decimal(190000),new Decimal(310000),new Decimal(550000),new Decimal(830000),new Decimal(1200000)]
Gongfa9effect = [new Decimal(0),new Decimal(15000),new Decimal(25000),new Decimal(45000),new Decimal(70000),new Decimal(150000),new Decimal(250000),new Decimal(380000),new Decimal(650000),new Decimal(990000),new Decimal(1919810)]
Gongfa10effect = [new Decimal(0),new Decimal(150000),new Decimal(2300000),new Decimal(4100000),new Decimal(6170000),new Decimal(7980000),new Decimal(1.2e7),new Decimal(1.7e7),new Decimal(2.5e7),new Decimal(3e7),new Decimal(3.7e7)]
Gongfa11effect = [new Decimal(0),new Decimal(1500000),new Decimal(23000000),new Decimal(41000000),new Decimal(61700000),new Decimal(79800000),new Decimal(1.2e8),new Decimal(1.7e8),new Decimal(5e8),new Decimal(1e9),new Decimal(2e9)]
Gongfa12effect = [new Decimal(0),new Decimal(15000000),new Decimal(230000000),new Decimal(410000000),new Decimal(617000000),new Decimal(798000000),new Decimal(1.2e9),new Decimal(1.7e9),new Decimal(5e9),new Decimal(1e10),new Decimal(2e11)]
Gongfa13effect = [new Decimal(0),new Decimal(150000000),new Decimal(2300000000),new Decimal(4100000000),new Decimal(61700000000),new Decimal(79800000000),new Decimal(1.2e12),new Decimal(1.7e12),new Decimal(5e12),new Decimal(1e13),new Decimal(2e14)]
Gongfa14effect = [new Decimal(0),new Decimal(1500000000),new Decimal(23000000000),new Decimal(41000000000),new Decimal(617000000000),new Decimal(798000000000),new Decimal(1.2e14),new Decimal(1.7e15),new Decimal(5e16),new Decimal(1e17),new Decimal(2e18)]
Gongfa15effect = [new Decimal(0),new Decimal(15000000000),new Decimal(230000000000),new Decimal(4100000000000),new Decimal(61700000000000),new Decimal(798000000000000),new Decimal(1.2e18),new Decimal(1.7e19),new Decimal(5e20),new Decimal(1e21),new Decimal(2e23)]
Gongfa16effect = [new Decimal(0),new Decimal(15000000000000),new Decimal(230000000000000),new Decimal(4100000000000000),new Decimal(61700000000000000),new Decimal(7980000000000000000),new Decimal(1.2e23),new Decimal(1.7e24),new Decimal(5e25),new Decimal(1e27),new Decimal(1e28)]
Julingzhen1effect = [new Decimal(0),new Decimal(10),new Decimal(20),new Decimal(50),new Decimal(100),new Decimal(170),new Decimal(270),new Decimal(440),new Decimal(700),new Decimal(1000),new Decimal(1400),new Decimal(1800),new Decimal(2300),new Decimal(2900),new Decimal(3700),new Decimal(4500),new Decimal(5500),new Decimal(6600),new Decimal(8000),new Decimal(9500)]
Julingzhen2effect = [new Decimal(0),new Decimal(50),new Decimal(80),new Decimal(130),new Decimal(210),new Decimal(360),new Decimal(630),new Decimal(980),new Decimal(1470),new Decimal(2100),new Decimal(2900),new Decimal(3900),new Decimal(5150),new Decimal(6700),new Decimal(8700),new Decimal(11300),new Decimal(14400),new Decimal(18200),new Decimal(22700),new Decimal(30000)]
Julingzhen3effect = [new Decimal(0),new Decimal(100),new Decimal(150),new Decimal(250),new Decimal(420),new Decimal(680),new Decimal(1050),new Decimal(1540),new Decimal(2170),new Decimal(3000),new Decimal(4050),new Decimal(5550),new Decimal(7550),new Decimal(10250),new Decimal(13800),new Decimal(18600),new Decimal(25100),new Decimal(33600),new Decimal(44600),new Decimal(59000)]
Julingzhen4effect = [new Decimal(0),new Decimal(250),new Decimal(350),new Decimal(600),new Decimal(900),new Decimal(1350),new Decimal(2000),new Decimal(2900),new Decimal(4500),new Decimal(6500),new Decimal(9000),new Decimal(12300),new Decimal(16300),new Decimal(21300),new Decimal(27600),new Decimal(35600),new Decimal(46000),new Decimal(59000),new Decimal(75500),new Decimal(96000)]
Julingzhen5effect = [new Decimal(0),new Decimal(1000),new Decimal(2000),new Decimal(5000),new Decimal(10000),new Decimal(17000),new Decimal(27000),new Decimal(44000),new Decimal(70000),new Decimal(90000),new Decimal(140000),new Decimal(213000),new Decimal(313000),new Decimal(450000),new Decimal(630000),new Decimal(850000),new Decimal(1130000),new Decimal(1480000),new Decimal(1910000),new Decimal(2300000)]
Julingzhen6effect = [new Decimal(0),new Decimal(5000),new Decimal(8000),new Decimal(13000),new Decimal(21000),new Decimal(36000),new Decimal(63000),new Decimal(98000),new Decimal(147000),new Decimal(210000),new Decimal(285000),new Decimal(375000),new Decimal(495000),new Decimal(650000),new Decimal(850000),new Decimal(1000000),new Decimal(1300000),new Decimal(1750000),new Decimal(2300000),new Decimal(3200000)]
Julingzhen7effect = [new Decimal(0),new Decimal(10000),new Decimal(15000),new Decimal(25000),new Decimal(42000),new Decimal(68000),new Decimal(105000),new Decimal(154000),new Decimal(217000),new Decimal(300000),new Decimal(410000),new Decimal(550000),new Decimal(730000),new Decimal(960000),new Decimal(1260000),new Decimal(1650000),new Decimal(2150000),new Decimal(2800000),new Decimal(3650000),new Decimal(4800000)]
Julingzhen8effect = [new Decimal(0),new Decimal(25000),new Decimal(35000),new Decimal(60000),new Decimal(90000),new Decimal(135000),new Decimal(200000),new Decimal(290000),new Decimal(450000),new Decimal(650000),new Decimal(920000),new Decimal(1270000),new Decimal(1770000),new Decimal(2470000),new Decimal(3500000),new Decimal(5000000),new Decimal(7200000),new Decimal(10200000),new Decimal(14200000),new Decimal(17000000)]
Julingzhen9effect = [new Decimal(0),new Decimal(100000),new Decimal(200000),new Decimal(300000),new Decimal(400000),new Decimal(600000),new Decimal(1e6),new Decimal(1.5e6),new Decimal(3e6),new Decimal(4.5e6),new Decimal(6e6),new Decimal(8e6),new Decimal(1.3e7),new Decimal(2.5e7),new Decimal(3.9e7),new Decimal(5.7e7),new Decimal(8.5e7),new Decimal(1e8),new Decimal(1.3e8),new Decimal(1.6e8)]
JingjieLimit = [new Decimal(0),new Decimal(1000),new Decimal(2000),new Decimal(3500),new Decimal(5500),new Decimal(8500),new Decimal(13000),new Decimal(20000),new Decimal(30000),new Decimal(45000),new Decimal(65000),new Decimal(90000),new Decimal(120000),new Decimal(190000),new Decimal(250000),new Decimal(300000),new Decimal(380000),new Decimal(450000),new Decimal(550000),new Decimal(700000),new Decimal(870000),new Decimal(1050000),new Decimal(1400000),new Decimal(2000000),new Decimal(2600000),new Decimal(3500000),new Decimal(4500000),new Decimal(6000000),new Decimal(8000000),new Decimal(11000000),new Decimal(13000000),new Decimal(15000000),new Decimal(18000000),new Decimal(35000000),new Decimal(55000000),new Decimal(85000000),new Decimal(120000000),new Decimal(160000000),new Decimal(200000000),new Decimal(250000000),new Decimal(300000000),new Decimal(370000000),new Decimal(420000000),new Decimal(550000000),new Decimal(640000000),new Decimal(750000000),new Decimal(1e9),new Decimal(1.2e9),new Decimal(1.5e9),new Decimal(1.7e9),new Decimal(2.2e9),new Decimal(2.8e9),new Decimal(4e9),new Decimal(5.5e9),new Decimal(7.3e9),new Decimal(1e10),new Decimal(1.14e10),new Decimal(1.4e10),new Decimal(1.78e10),new Decimal(2.25e10),new Decimal(2.6e10),new Decimal(3.2e10),new Decimal(5.5e10),new Decimal(8.8e10),new Decimal(1.23e11),new Decimal(1.55e11),new Decimal(1.89e11),new Decimal(2.5e11),new Decimal(6e11),new Decimal(1.4e12),new Decimal(3.1e12),new Decimal(4.9e12),new Decimal(8e12),new Decimal(1.7e13),new Decimal(2.6e13),new Decimal(4.5e13),new Decimal(9e13),new Decimal(3.5e14),new Decimal(1.2e15),new Decimal(5e15),new Decimal(2e16),new Decimal(8.3e16),new Decimal(2.4e17),new Decimal(7.5e17),new Decimal(4e18),new Decimal(1.4e19),new Decimal(6.3e19),new Decimal(2.1e20),new Decimal(9e20),new Decimal(3.3e21),new Decimal(8.8e21),new Decimal(6.5e22),new Decimal(4e23),new Decimal(3.5e24),new Decimal(2.1e25),new Decimal(1.5e26),new Decimal(1e27),new Decimal(9.1e27),new Decimal(8.4e28),new Decimal(7e29),new Decimal(5.5e30),new Decimal(4.3e31),new Decimal(2.6e32),new Decimal(2.4e33),new Decimal(2.2e34),new Decimal(1.9e35),new Decimal(3.6e37),new Decimal(7e38),new Decimal(1.4e40),new Decimal(2.8e41),new Decimal(5.6e42),new Decimal(1.2e44),new Decimal(2.5e45),new Decimal(5.3e46),new Decimal(1.3e48),new Decimal(2.9e49),new Decimal(1e51),new Decimal(4e52),new Decimal(1.6e54),new Decimal(6e55),new Decimal(2.4e57),new Decimal(8e58),new Decimal(3e60),new Decimal(1e62),new Decimal(4e63),new Decimal(2e65),new Decimal(2e67),new Decimal(2e69),new Decimal(2e71),new Decimal(2e73),new Decimal(2e75),new Decimal(2e77),new Decimal(2e79),new Decimal(2e81),new Decimal(2e83),new Decimal(2e85),new Decimal(2e87),new Decimal(2e89),new Decimal(2e91),new Decimal(2e93),new Decimal(2e95),new Decimal(1e99),new Decimal(1e103),new Decimal(1e107),new Decimal(1e111),new Decimal(1e115),new Decimal(1e119),new Decimal(1e123),new Decimal(1e127),new Decimal(1e131),new Decimal(1e137),new Decimal(1e143),new Decimal(1e150),new Decimal(1e157),new Decimal(1e162),new Decimal(1e168),new Decimal(1e174),new Decimal(1e180),new Decimal(1e188),new Decimal(1e196),new Decimal(1e204),new Decimal(1e209),new Decimal(1e214),new Decimal(1e219),new Decimal(1e224),new Decimal(1e229),new Decimal(1e234),new Decimal(1e239),new Decimal(1e244),new Decimal(1e249),new Decimal(1e254),new Decimal(1e259),new Decimal(1e264),new Decimal(1e269),new Decimal(1e274),new Decimal(1e279),new Decimal(1e284),new Decimal(1e289),new Decimal(1e294),new Decimal(1e299),new Decimal(1.79e308),new Decimal("1e400")]
var userData = {};
var JingjieMult = new Decimal(0);
var LingqiMult = new Decimal(0);
var Zhuanshengpointsgain = new Decimal(0);
var ppEff = new Decimal(1);
var canZhuansheng = false;
//加载用户数据

/* Lingqi: new Decimal(100),
    LingqiPerSec: new Decimal(0),
    Lingshi: new Decimal(0),
    Xiuwei: new Decimal(0),
    XiuweiPerSec: new Decimal(0),
    Jingjieid: new Decimal(1),
    Gongfa1Level: new Decimal(0),
    Gongfa2Level: new Decimal(0),
    Gongfa3Level: new Decimal(0),
    Gongfa4Level: new Decimal(0),
    Gongfa5Level: new Decimal(0),
    Gongfa6Level: new Decimal(0),
    Gongfa7Level: new Decimal(0),
    Gongfa8Level: new Decimal(0),
    Gongfa9Level: new Decimal(0),
    Gongfa10Level: new Decimal(0),
    Gongfa11Level: new Decimal(0),
    Gongfa12Level: new Decimal(0),
    Gongfa13Level: new Decimal(0),
    GongfaS1Level: new Decimal(0),
    GongfaS2Level: new Decimal(0),
    GongfaS3Level: new Decimal(0),
    Julingzhen1Level: new Decimal(0),
    Julingzhen1Freeze: new Decimal(3),
    Julingzhen1FreezeLimit: new Decimal(3),
    Julingzhen2Level: new Decimal(0),
    Julingzhen2Freeze: new Decimal(6),
    Julingzhen2FreezeLimit: new Decimal(6),
    Julingzhen3Level: new Decimal(0),
    Julingzhen3Freeze: new Decimal(10),
    Julingzhen3FreezeLimit: new Decimal(10),
    Julingzhen4Level: new Decimal(0),
    Julingzhen4Freeze: new Decimal(15),
    Julingzhen4FreezeLimit: new Decimal(15),
    Julingzhen5Level: new Decimal(0),
    Julingzhen5Freeze: new Decimal(35),
    Julingzhen5FreezeLimit: new Decimal(35),
    Julingzhen6Level: new Decimal(0),
    Julingzhen6Freeze: new Decimal(50),
    Julingzhen6FreezeLimit: new Decimal(50),
    Julingzhen7Level: new Decimal(0),
    Julingzhen7Freeze: new Decimal(75),
    Julingzhen7FreezeLimit: new Decimal(75),
    Julingzhen8Level: new Decimal(0),
    Julingzhen8Freeze: new Decimal(100),
    Julingzhen8FreezeLimit: new Decimal(100),
    Julingzhen9Level: new Decimal(0),
    Julingzhen9Freeze: new Decimal(120),
    Julingzhen9FreezeLimit: new Decimal(120),
    PrestigePoints:new Decimal(0),
    PrestigeTimes:new Decimal(0),
    ppUpg:[],
    */
    
//硬重置
function reset(){
    //将已经保存的用户数据恢复到初始状态并且刷新页面
    userData = {

    }
    localStorage.setItem("gameStateData", JSON.stringify(userData));
    location.reload();
}
//保存游戏
function save(){
    userData = {
        Lingqi: new Decimal(userData.Lingqi),
        totalLingqi: new Decimal(userData.totalLingqi),
        Lingshi: new Decimal(userData.Lingshi),
        Xiuwei: new Decimal(userData.Xiuwei),
        Jingjieid: new Decimal(userData.Jingjieid),
        LingqiPerSec: new Decimal(userData.LingqiPerSec),
        XiuweiPerSec: new Decimal(userData.XiuweiPerSec),
        Gongfa1Level: new Decimal(userData.Gongfa1Level),
        Gongfa2Level: new Decimal(userData.Gongfa2Level),
        Gongfa3Level: new Decimal(userData.Gongfa3Level),
        Gongfa4Level: new Decimal(userData.Gongfa4Level),
        Gongfa5Level: new Decimal(userData.Gongfa5Level),
        Gongfa6Level: new Decimal(userData.Gongfa6Level),
        Gongfa7Level: new Decimal(userData.Gongfa7Level),
        Gongfa8Level: new Decimal(userData.Gongfa8Level),
        Gongfa9Level: new Decimal(userData.Gongfa9Level),
        Gongfa10Level: new Decimal(userData.Gongfa10Level),
        Gongfa11Level: new Decimal(userData.Gongfa11Level),
        Gongfa12Level: new Decimal(userData.Gongfa12Level),
        Gongfa13Level: new Decimal(userData.Gongfa13Level),
        Gongfa14Level: new Decimal(userData.Gongfa14Level),
        Gongfa15Level: new Decimal(userData.Gongfa15Level),
        Gongfa16Level: new Decimal(userData.Gongfa16Level),
        GongfaS1Level: new Decimal(userData.GongfaS1Level),
        GongfaS2Level: new Decimal(userData.GongfaS2Level),
        GongfaS3Level: new Decimal(userData.GongfaS3Level),
        Julingzhen1Level: new Decimal(userData.Julingzhen1Level),
        Julingzhen1Freeze: new Decimal(userData.Julingzhen1Freeze),
        Julingzhen1FreezeLimit: new Decimal(userData.Julingzhen1FreezeLimit),
        Julingzhen2Level: new Decimal(userData.Julingzhen2Level),
        Julingzhen2Freeze: new Decimal(userData.Julingzhen2Freeze),
        Julingzhen2FreezeLimit: new Decimal(userData.Julingzhen2FreezeLimit),
        Julingzhen3Level: new Decimal(userData.Julingzhen3Level),
        Julingzhen3Freeze: new Decimal(userData.Julingzhen3Freeze),
        Julingzhen3FreezeLimit: new Decimal(userData.Julingzhen3FreezeLimit),
        Julingzhen4Level: new Decimal(userData.Julingzhen4Level),
        Julingzhen4Freeze: new Decimal(userData.Julingzhen4Freeze),
        Julingzhen4FreezeLimit: new Decimal(userData.Julingzhen4FreezeLimit),
        Julingzhen5Level: new Decimal(userData.Julingzhen5Level),
        Julingzhen5Freeze: new Decimal(userData.Julingzhen5Freeze),
        Julingzhen5FreezeLimit: new Decimal(userData.Julingzhen5FreezeLimit),
        Julingzhen6Level: new Decimal(userData.Julingzhen6Level),
        Julingzhen6Freeze: new Decimal(userData.Julingzhen6Freeze),
        Julingzhen6FreezeLimit: new Decimal(userData.Julingzhen6FreezeLimit),
        Julingzhen7Level: new Decimal(userData.Julingzhen7Level),
        Julingzhen7Freeze: new Decimal(userData.Julingzhen7Freeze),
        Julingzhen7FreezeLimit: new Decimal(userData.Julingzhen7FreezeLimit),
        Julingzhen8Level: new Decimal(userData.Julingzhen8Level),
        Julingzhen8Freeze: new Decimal(userData.Julingzhen8Freeze),
        Julingzhen8FreezeLimit: new Decimal(userData.Julingzhen8FreezeLimit),
        Julingzhen9Level: new Decimal(userData.Julingzhen9Level),
        Julingzhen9Freeze: new Decimal(userData.Julingzhen9Freeze),
        Julingzhen9FreezeLimit: new Decimal(userData.Julingzhen9FreezeLimit),
        PrestigePoints:new Decimal(userData.PrestigePoints),
        PrestigeTimes:new Decimal(userData.PrestigeTimes),
        XinmoBuyable1:new Decimal(userData.XinmoBuyable1),
        XinmoBuyable2:new Decimal(userData.XinmoBuyable2),
        XinmoBuyable3:new Decimal(userData.XinmoBuyable3),
        XinmoBuyable4:new Decimal(userData.XinmoBuyable4),
        XinmoBuyable5:new Decimal(userData.XinmoBuyable5),
        XinmoBuyable6:new Decimal(userData.XinmoBuyable6),
        XinmoBuyable7:new Decimal(userData.XinmoBuyable7),
        XinmoBuyable8:new Decimal(userData.XinmoBuyable8),
        XinmoBuyable9:new Decimal(userData.XinmoBuyable9),
        Xinmo:new Decimal(userData.Xinmo),
        totalXinmo:new Decimal(userData.totalXinmo),
        Jingjie: userData.Jingjie,
        XiulianBalance: new Decimal(userData.XiulianBalance),
        ppUpg: userData.ppUpg,
    }
    localStorage.setItem("gameStateData", JSON.stringify(userData));
}
//gameloop 
window.setInterval(() => {
    userData.LingqiPerSec = (new Decimal(Gongfa1effect[userData.Gongfa1Level]).add(new Decimal(Gongfa2effect[userData.Gongfa2Level])).add(new Decimal(Gongfa3effect[userData.Gongfa3Level])).add(new Decimal(Gongfa4effect[userData.Gongfa4Level])).add(new Decimal(Gongfa5effect[userData.Gongfa5Level])).add(new Decimal(Gongfa6effect[userData.Gongfa6Level])).add(new Decimal(Gongfa7effect[userData.Gongfa7Level])).add(new Decimal(Gongfa8effect[userData.Gongfa8Level])).add(new Decimal(Gongfa9effect[userData.Gongfa9Level])).add(new Decimal(Gongfa10effect[userData.Gongfa10Level])).add(new Decimal(Gongfa11effect[userData.Gongfa11Level])).add(new Decimal(Gongfa12effect[userData.Gongfa12Level])).add(new Decimal(Gongfa13effect[userData.Gongfa13Level])).add(new Decimal(Gongfa14effect[userData.Gongfa14Level])).add(new Decimal(Gongfa15effect[userData.Gongfa15Level])).add(new Decimal(Gongfa16effect[userData.Gongfa16Level]))).times(ppEff).mul(prestige.ppLingqiMult())
    document.getElementById("LingqiPerSec").innerHTML = "你正在每次练功获取"+format(userData.LingqiPerSec)+"灵气。由于你目前的修炼能力，你每秒钟自动练功20次，总共"+format(new Decimal(userData.LingqiPerSec).mul(20))+"灵气/秒！"
document.getElementById("XiuweiPerSec").innerHTML = (userData.XiulianBalance)>0.1?("你正在每次修炼获取"+format(userData.XiuweiPerSec.mul(prestige.ppXiuweiMult()))+"修为。由于你目前的修炼能力，你每秒钟自动修炼20次，总共"+format(new Decimal(userData.XiuweiPerSec).mul(prestige.ppXiuweiMult()).mul(20))+"修为/秒！<br>剩余修炼时间："+format(userData.XiulianBalance)+"s"):("你现在不在修炼中。")
    userData.Lingqi = userData.Lingqi.add(new Decimal(userData.LingqiPerSec))
    userData.totalLingqi = userData.totalLingqi.add(new Decimal(userData.LingqiPerSec))
    document.getElementById("Lingqi").innerHTML = format(userData.Lingqi)
    document.getElementById("Lingshi").innerHTML = format(userData.Lingshi)
    document.getElementById("Lingshi2").innerHTML = format(userData.Lingshi)
    for(i=1;i<=9;i++)
    {
      
      userData["Julingzhen"+i+"FreezeLimit"] = JulingzhenFreeze[i]
  }
    for(i=1;i<=9;i++)
    {
      JulingzhenEff(i)
  }
  for(i=1;i<=16;i++)
    {
      GongfaHtml(i)
    }
    for(i=1;i<=9;i++)
    {
      JulingzhenHtml(i)
    }
    if(userData.Jingjieid<=15) userData.Jingjie="练气"+userData.Jingjieid+"阶"
    else if(userData.Jingjieid<30) userData.Jingjie= "筑基"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==30) userData.Jingjie= "筑基15阶"
    else if(userData.Jingjieid<45) userData.Jingjie= "开光"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==45) userData.Jingjie= "开光15阶"
    else if(userData.Jingjieid<60) userData.Jingjie= "融合"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==60) userData.Jingjie= "融合15阶"
    else if(userData.Jingjieid<75) userData.Jingjie= "心动"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==75) userData.Jingjie= "心动15阶"
    else if(userData.Jingjieid<90) userData.Jingjie= "金丹"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==90) userData.Jingjie= "金丹15阶"
    else if(userData.Jingjieid<105) userData.Jingjie= "元婴"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==105) userData.Jingjie= "元婴15阶"
    else if(userData.Jingjieid<120) userData.Jingjie= "分神"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==120) userData.Jingjie= "分神15阶"
    else if(userData.Jingjieid<135) userData.Jingjie= "合体"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==135) userData.Jingjie= "合体15阶"
    else if(userData.Jingjieid<150) userData.Jingjie= "炼虚"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==150) userData.Jingjie= "炼虚15阶"
    else if(userData.Jingjieid<165) userData.Jingjie= "大乘"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==165) userData.Jingjie= "大乘15阶"
    else if(userData.Jingjieid<180) userData.Jingjie= "渡劫"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==180) userData.Jingjie= "渡劫15阶"
    else if(userData.Jingjieid<195) userData.Jingjie= "幼灵"+(userData.Jingjieid%15)+"阶"
    else if(userData.Jingjieid==195) userData.Jingjie= "幼灵15阶"
    if((userData.Xiuwei).gte(JingjieLimit[userData.Jingjieid])) userData.Xiuwei = userData.Xiuwei.sub(JingjieLimit[userData.Jingjieid]),userData.Jingjieid++,getAchievement()
    JingjieFormat()
    if(userData.XiulianBalance.gte(0.05)) userData.XiulianBalance = userData.XiulianBalance.sub(0.05),userData.Xiuwei = userData.Xiuwei.add(userData.XiuweiPerSec.mul(prestige.ppXiuweiMult()))
    if(userData.XiulianBalance.lte(0)) userData.XiuweiPerSec = new Decimal(0)
    document.getElementById("UpdateJingjie").innerHTML = userData.Jingjie
    for(i=1;i<=9;i++)
    {
      JulingzhenEff(i)
    }
    document.getElementById("ShowUpgradeLevelS1").innerHTML = format(userData["GongfaS1Level"])
    document.getElementById("ShowUpgradePriceS1").innerHTML = "价格"+format(prestige.GongfaS1cost())
    document.getElementById("ShowUpgradeEffectS1").innerHTML = format(prestige.GongfaS1effect())+"x"
    document.getElementById("ShowUpgradeLevelS2").innerHTML = format(userData["GongfaS2Level"])
    document.getElementById("ShowUpgradePriceS2").innerHTML = "价格"+format(prestige.GongfaS2cost())
    document.getElementById("ShowUpgradeEffectS2").innerHTML = format(prestige.GongfaS2effect())+"x"
    document.getElementById("ShowUpgradeLevelS3").innerHTML = format(userData["GongfaS3Level"])
    document.getElementById("ShowUpgradePriceS3").innerHTML = "价格:"+format(prestige.GongfaS3cost())
    document.getElementById("ShowUpgradeEffectS3").innerHTML = "+"+format(prestige.GongfaS3effect())
    if(userData.ppUpg.includes(11)?userData.totalLingqi.lt(1e10):userData.Lingqi.lt(1e10)) LingqiMult = new Decimal(0)
    else LingqiMult = (userData.ppUpg.includes(11)?userData.totalLingqi:userData.Lingqi).div(1e10).cbrt()
    if(userData.Jingjieid.lt(40)) JingjieMult = new Decimal(0)
    else JingjieMult = userData.Jingjieid.sub(39).pow(1.05).pow(userData.ppUpg.includes(19)?2:1)
    if((userData.ppUpg.includes(11)?userData.totalLingqi.gte(1e10):userData.Lingqi.gte(1e10))&&userData.Jingjieid.gte(40)) canZhuansheng = true
    else canZhuansheng = false
    ppEff = new Decimal(1).add(userData.PrestigePoints.mul(0.1).add(userData.PrestigeTimes.gte(1)? 0.5 : 0).mul(prestige.pppeMult()))
    if(userData.ppUpg.length>10.5) userData.Xinmo = userData.Xinmo.add(prestige.XinmoGain().mul(0.05)),userData.totalXinmo = userData.totalXinmo.add(prestige.XinmoGain().mul(0.05))
    document.getElementById("pp").innerHTML = format(userData.PrestigePoints)
    document.getElementById("ppTimes").innerHTML = userData.PrestigeTimes
    document.getElementById("ppEff").innerHTML = format(ppEff)+"x"
    Zhuanshengpointsgain = canZhuansheng? LingqiMult.mul(JingjieMult).mul(prestige.ppppMult()).floor():new Decimal(0)
    if(Zhuanshengpointsgain.gte(1e10)) Zhuanshengpointsgain = new Decimal(1e10).mul(Zhuanshengpointsgain.div(1e10).root(3))
    if(userData.ppUpg.includes(21)) userData.PrestigePoints = userData.PrestigePoints.add(Zhuanshengpointsgain.mul(0.005))
    document.getElementById("LingqiMult").innerHTML = "》》》转生灵气乘数："+format(LingqiMult)+"x《《《"
    document.getElementById("JingjieMult").innerHTML = "》》》转生境界乘数："+format(JingjieMult)+"x《《《"
    document.getElementById("canZhuansheng").innerHTML = canZhuansheng? "✔️如果你愿意的话，你可以随时进行转生。(转生条件全部已满足)":"❌你暂时不满足转生条件，不能转生！"
    if(!userData.ppUpg.includes(21)) document.getElementById("prestige").innerHTML = ("重置之前的所有进度并进行转生，以获得 "+format(Zhuanshengpointsgain)+" 转生点数")
    else document.getElementById("prestige").innerHTML = ("+"+format(Zhuanshengpointsgain.mul(0.1))+"转生点数/s")
    document.getElementById("ppUpgs").innerHTML = userData.ppUpg.length+" / 11"
    document.getElementById("Xinmo").innerHTML = format(userData.Xinmo)+"(+"+format(prestige.XinmoGain())+"/s)"
    document.getElementById("XinmoD").innerHTML = " /"+format(prestige.XinmoD())
    document.getElementById("XinmoI").innerHTML = "x"+format(prestige.XinmoI())
    option2Appear()
    option3Appear()
    option4Appear()
    ZhujiAppear()
    KaiguangAppear()
    RongheAppear()
    XindongAppear()
    JindanAppear()
    YuanyingAppear()
    FenshenAppear()
    DachengAppear()
    DujieAppear()
    Dujie2Appear()
    HetiAppear()
    pp12Appear()
    pp15Appear()
    pp18Appear()
    option3_2Appear()
    option3_3Appear()
    option3_4Appear()
    option3_5Appear()
    option3_6Appear()
    option3_7Appear()
    option3_8Appear()
    option3_9Appear()
    option3_10Appear()
    option3_11Appear()
    option3_12Appear()
    option4_2Appear()
    option4_3Appear()
    for(var i in upgrades)
    {
      data = document.getElementById(i)
      if(data!=undefined)
      {
var j = upgrades[i].style()
for(var k in j)
{
  data.style[k]=j[k]
  
}
data.innerHTML = upgrades[i].title()+"<br>"+upgrades[i].effectDesc()+"<br>价格："+format(upgrades[i].cost())+"转生点数<br>当前："+upgrades[i].currently()
data.disabled = !upgrades[i].canAfford()
      }
    }
    for(var i in buyables)
    {
      data = document.getElementById(i)
      if(data!=undefined&&data!=null)
      {
      var j = buyables[i].style()
      for(var k in j)
      {
      data.style[k]=j[k]
  
      }
      data.innerHTML = buyables[i].title()+"<br>"+buyables[i].effectDesc()+"<br>当前等级："+format(buyables[i].level())+"<br>价格："+format(buyables[i].cost())+"心魔值<br>效果："+buyables[i].currently()
      data.disabled = !buyables[i].canAfford()
      }
    }
    for(i=1;i<=9;i++)
    {
      move(i)
    }
    
    hint()
}, 50);

var prestige={
  ppLingqiMult(){
    let mult = new Decimal(1)
    if(userData.ppUpg.includes(11)) mult = mult.mul(3)
    if(userData.GongfaS1Level>=1) mult = mult.mul(prestige.GongfaS1effect())
    if(userData.ppUpg.includes(20)) mult = mult.mul(userData.Lingqi.log10().add(1))
    return mult
  },
  ppXiuweiMult(){
    let mult = new Decimal(1)
    if(userData.GongfaS1Level>=1) mult = mult.mul(prestige.GongfaS1effect())
    if(userData.GongfaS2Level>=1) mult = mult.mul(prestige.GongfaS2effect())
    if(userData.ppUpg.includes(16)) mult = mult.mul(upgrades.Upgrade16.effect())
    if(userData.ppUpg.includes(20)) mult = mult.mul(userData.Xiuwei.root(10).add(1).min(userData.ppUpg.includes(27)?1e100:1e10))
    if(userData.totalXinmo.gte(1)) mult = mult.mul(prestige.XinmoI())
    return mult
  },
  ppppMult()
  {
    let mult = new Decimal(1)
    if(userData.ppUpg.includes(14)) mult = mult.mul(5)
    if(userData.ppUpg.includes(17)) mult = mult.mul(userData.Lingshi.pow(0.07))
    if(userData.ppUpg.includes(20)) mult = mult.mul(userData.PrestigePoints.log10().add(1))
    if(userData.Xinmo.gte(1)) mult = mult.div(prestige.XinmoD())
    if(userData.ppUpg.includes(22)) mult = mult.mul(upgrades.Upgrade22.effect())
    if(userData.XinmoBuyable6.gte(1)) mult = mult.mul(buyables.Buyable16.effect())
    return mult
  },
  ppLingshiMult()
  {
    let mult = new Decimal(1)
    if(userData.ppUpg.includes(17)) mult = mult.mul(upgrades.Upgrade17.effect())
    if(userData.ppUpg.includes(20)) mult = mult.mul(userData.Lingshi.log10().add(1))
    return mult
  },
  pppeMult()
  {
    let mult = new Decimal(1)
    if(userData.ppUpg.includes(15)) mult = mult.mul(prestige.GongfaS2effect())
    if(userData.totalXinmo.gte(1)) mult = mult.mul(prestige.XinmoI())
    return mult
  },
  GongfaS1cost()
  {
    let base = new Decimal(1000)
    let power = new Decimal(10)
    cost = base.mul(power.pow(userData.GongfaS1Level))
    if(userData.ppUpg.includes(13)) cost = cost.div(100)
    return cost
  },
  GongfaS2cost()
  {
    let base = new Decimal(1e12)
    let power = new Decimal(600000)
    cost = base.mul(power.pow(userData.GongfaS2Level))
    if(userData.ppUpg.includes(16)) cost = cost.div(1e7)
    if(userData.GongfaS2Level.gte(19)) cost = cost.mul(new Decimal(1e4).pow((userData.GongfaS2Level.sub(18)).pow(2)))
    if(userData.ppUpg.includes(27)) cost = cost.div(1e4)
    return cost
  },
  GongfaS3cost()
  {
    let base = new Decimal(2)
    cost = base.mul(userData.GongfaS3Level).add(4)
    cost = cost.add(userData.GongfaS3Level.sub(1).max(0))
    if(userData.XinmoBuyable3.gte(1)) cost = cost.sub(buyables.Buyable13.effect())
    if(userData.GongfaS3Level.gte(5)) cost = cost.add(new Decimal(4).mul(userData.GongfaS3Level.sub(4)))
    if(userData.ppUpg.includes(27)) cost = cost.sub(2)
    return cost
  },
  GongfaS1effect()
  {
    let base = new Decimal(1.08)
    if(userData.GongfaS3Level.gte(1)) base = base.add(prestige.GongfaS3effect().mul(0.08))
    eff = base.pow(new Decimal(userData.GongfaS1Level).add(userData.ppUpg.includes(13)? upgrades.Upgrade13.effect():0 ).add(userData.XinmoBuyable1))
    return eff
  },
  GongfaS2effect()
  {
    let base = new Decimal(2)
    if(userData.GongfaS3Level.gte(1)) base = base.add(prestige.GongfaS3effect())
    eff = base.pow(new Decimal(userData.GongfaS2Level).add(userData.XinmoBuyable5))
    return eff
  },
  GongfaS3effect()
  {
    let eff = new Decimal(userData.GongfaS3Level)
    if(userData.ppUpg.includes(25)) eff = eff.add(1)
    return eff
  },
  GongfaS1Bulk()
  {
    return new Decimal(1)
  },
  GongfaS2Bulk()
  {
    return new Decimal(1)
  },
  GongfaS3Bulk()
  {
    return new Decimal(1)
  },
  XinmoGain()
  {
    let base = new Decimal(4)
    let gain = new Decimal(0)
    if(userData.ppUpg.length<10.5) return new Decimal(0)
    gain = base.pow(new Decimal(userData.ppUpg.length).sub(10))
    gain = gain.mul(buyables.Buyable12.effect())
    if(userData.ppUpg.includes(22)) gain = gain.mul(upgrades.Upgrade22.effect())
    if(userData.ppUpg.includes(23)) gain = gain.mul(upgrades.Upgrade23.effect())
    if(userData.ppUpg.includes(24)) gain = gain.mul(upgrades.Upgrade24.effect())
    if(userData.ppUpg.includes(25)) gain = gain.mul(upgrades.Upgrade25.effect())
    if(userData.XinmoBuyable6.gte(1)) gain = gain.mul(buyables.Buyable16.effect())
    return gain
  },
  XinmoD()
  {
     let base = new Decimal(3)
     gain = base.pow(userData.Xinmo.add(1).log2())
     return gain
  },
  XinmoI()
  {
     let base = new Decimal(1.1)
     if(userData.ppUpg.includes(23)) base = base.add(2)
     if(userData.XinmoBuyable4.gte(1)) base = base.add(buyables.Buyable14.effect())
     if(userData.XinmoBuyable6.gte(1)) base = base.add(userData.XinmoBuyable6.add(userData.ppUpg.includes(27)?2:0).mul(0.2))
     gain = base.pow(userData.totalXinmo.add(1).log2().sub(1))
     if(gain.gte(1e15)) gain = new Decimal(1e15).mul(gain.div(1e15).root(4))
     return gain
  },
}
var buyables={
  Buyable11:{
    title(){return "基元Free"},
    effectDesc(){return "免费获取五转返虚经等级。"},
    cost(){return new Decimal(15).pow(userData.XinmoBuyable1)},
    effect(){return userData.XinmoBuyable1.add(userData.ppUpg.includes(27)?2:0)},
    level(){return userData.XinmoBuyable1},
    style(){ if(userData.Xinmo.gte(this.cost())) return {"background-color":"#FF3300","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "+"+this.effect()},
   canAfford(){return userData.Xinmo.gte(this.cost())&&!userData.XinmoBuyable1.gte(1000)}
  },
  Buyable12:{
    title(){return "心魔x"},
    effectDesc(){return "心魔值获取速度提升2倍。"},
    cost(){return new Decimal(10).pow(userData.XinmoBuyable2).mul(1000)},
    effect(){return new Decimal(2).pow(userData.XinmoBuyable2.add(userData.ppUpg.includes(27)?2:0))},
    level(){return userData.XinmoBuyable2},
    style(){ if(userData.Xinmo.gte(this.cost())) return {"background-color":"#FF3300","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "x"+format(this.effect())},
   canAfford(){return userData.Xinmo.gte(this.cost())&&!userData.XinmoBuyable2.gte(1000)}
  },
  Buyable13:{
    title(){return "基元^3-"},
    effectDesc(){return "降低九转还魂经的升级成本。"},
    cost(){return new Decimal(1e6).pow(new Decimal(2).pow(userData.XinmoBuyable3.add(userData.ppUpg.includes(27)?2:0)))},
    effect(){return userData.XinmoBuyable3.add(userData.ppUpg.includes(27)?2:0)},
    level(){return userData.XinmoBuyable3},
    style(){ if(userData.Xinmo.gte(this.cost())) return {"background-color":"#FF3300","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "-"+format(this.effect())},
   canAfford(){return userData.Xinmo.gte(this.cost())&&!userData.XinmoBuyable3.gte(1000)}
  },
  Buyable14:{
    title(){return "心魔base+"},
    effectDesc(){return "提升心魔基础效果。"},
    cost(){return new Decimal(1000).pow(userData.XinmoBuyable4).mul(new Decimal(1e15))},
    effect(){return userData.XinmoBuyable4.add(userData.ppUpg.includes(27)?2:0).mul(0.1)},
    level(){return userData.XinmoBuyable4},
    style(){ if(userData.Xinmo.gte(this.cost())) return {"background-color":"#FF3300","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "+"+format(this.effect())},
   canAfford(){return userData.Xinmo.gte(this.cost())&&!userData.XinmoBuyable4.gte(1000)}
  },
  Buyable15:{
    title(){return "转生FFF"},
    effectDesc(){return "免费获得七转还阳经等级。"},
    cost(){return new Decimal(2333).pow(userData.XinmoBuyable5).mul(new Decimal(1e25))},
    effect(){return userData.XinmoBuyable5.add(userData.ppUpg.includes(27)?2:0)},
    level(){return userData.XinmoBuyable5},
    style(){ if(userData.Xinmo.gte(this.cost())) return {"background-color":"#FF3300","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "+"+format(this.effect())},
   canAfford(){return userData.Xinmo.gte(this.cost())&&!userData.XinmoBuyable5.gte(1000)}
  },
  Buyable16:{
    title(){return "心魔∞"},
    effectDesc(){return "心魔值与转生点数获取速度x1.5。心魔效应基础+0.2"},
    cost(){return new Decimal(6666).pow(userData.XinmoBuyable6).mul(new Decimal(1e28))},
    effect(){return new Decimal(1.5).pow(userData.XinmoBuyable6.add(userData.ppUpg.includes(27)?2:0))},
    level(){return userData.XinmoBuyable6},
    style(){ if(userData.Xinmo.gte(this.cost())) return {"background-color":"#FF3300","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "x"+format(this.effect())+"<br>+"+format(userData.XinmoBuyable6.mul(0.2))},
   canAfford(){return userData.Xinmo.gte(this.cost())&&!userData.XinmoBuyable6.gte(1000)}
  },
}
var upgrades={
  Upgrade11:{
    title(){return "开始"},
    effectDesc(){return "你获得3倍的灵气，且转生基于总灵气而不是当前灵气。"},
    cost(){return new Decimal(10)},
    effect(){return new Decimal(3)},
    style(){if(userData.ppUpg.includes(11)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "3.00x"},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(11)}
  },
  Upgrade12:{
    title(){return "基元"},
    effectDesc(){return "在功法选项卡下解锁一种强大的功法！"},
    cost(){return new Decimal(100)},
    effect(){return new Decimal(1)},
    style(){if(userData.ppUpg.includes(12)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "在上面写着了！"},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(12)}
  },
  Upgrade13:{
    title(){return "境界压制"},
    effectDesc(){return "境界每提升1个小境界，五转返虚经就获得0.1个免费等级。五转返虚经价格基数略微降低。"},
    cost(){return new Decimal(300)},
    effect(){return new Decimal(0.1).mul(userData.Jingjieid)},
    style(){if(userData.ppUpg.includes(13)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "+"+format(this.effect())},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(13)}
  },
  Upgrade14:{
    title(){return "轮回转生"},
    effectDesc(){return "转生点数获取提升至5倍。批量购买10倍的全部心动境及之前功法。"},
    cost(){return new Decimal(1000)},
    effect(){return new Decimal(5)},
    style(){if(userData.ppUpg.includes(14)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "x"+this.effect()},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(14)}
  },
  Upgrade15:{
    title(){return "基元^2"},
    effectDesc(){return "在功法选项卡下解锁一种更加强大的功法。对于转生重置保留全部的聚灵阵且它们的冷却降低到1/3！满意吧？"},
    cost(){return new Decimal(10000)},
    effect(){return new Decimal(3)},
    style(){if(userData.ppUpg.includes(15)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "/"+this.effect()},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(15)}
  },
  Upgrade16:{
    title(){return "基元^2+"},
    effectDesc(){return "七转还阳经初始花费/1e7。对于转生保留50%的境界，而非完全重置。此外转生点数以50%的指数加成修为获取。"},
    cost(){return new Decimal(100000)},
    effect(){return ppEff.pow(0.5)},
    style(){if(userData.ppUpg.includes(16)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "x"+format(this.effect())},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(16)}
  },
  Upgrade17:{
    title(){return "小周天阵"},
    effectDesc(){return "额外获得转生效应60%指数的灵石。灵石的7%指数同样加成于转生点数获取。转生不再失去任何灵石！"},
    cost(){return new Decimal(300000)},
    effect(){return ppEff.pow(0.6)},
    style(){if(userData.ppUpg.includes(17)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "灵石x"+format(this.effect())+"<br>"+"转生点数x"+format(userData.Lingshi.pow(0.07))},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(17)}
  },
  Upgrade18:{
    title(){return "基元^3"},
    effectDesc(){return "解锁凡界最强大的功法。转生不再重置功法并且保持80%的境界。"},
    cost(){return new Decimal(1e8)},
    effect(){return ppEff.pow(0.6)},
    style(){if(userData.ppUpg.includes(18)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "在上面写着了！为什么要听一个游戏作者在这里讲废话？"},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(18)}
  },
  Upgrade19:{
    title(){return "境界压制 II"},
    effectDesc(){return "境界对转生点数获取的加成提升至2次方。转生保留五转返虚经。"},
    cost(){return new Decimal(1e10)},
    effect(){return ppEff.pow(0.6)},
    style(){if(userData.ppUpg.includes(19)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "^2.00"},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(19)}
  },
  Upgrade20:{
    title(){return "自协同"},
    effectDesc(){return "飞升前所有常规资源的log10倍加成自身。转生保留90%的境界。"},
    cost(){return new Decimal(2e12)},
    effect(){return ppEff.pow(0.6)},
    style(){if(userData.ppUpg.includes(20)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "很长，这里写不下了，知道厉害就好..."},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(20)}
  },
  Upgrade21:{
    title(){return "挂机"},
    effectDesc(){return "每秒获取10%转生可获得的转生点数。禁用自动转生且功法升级导致的转生保留一切。"},
    cost(){return new Decimal(1e14)},
    effect(){return ppEff.pow(0.6)},
    style(){if(userData.ppUpg.includes(21)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "你在买下这个升级之后感到了一股隐隐的不安..."},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(21)}
  },
  Upgrade22:{
    title(){return "境界压制 III【境界之魔】"},
    effectDesc(){return "每提升一个大境界，心魔值与转生点数获取都会翻倍。"},
    cost(){return new Decimal(1e15)},
    effect(){if(!userData.ppUpg.includes(26))return new Decimal(2).pow(userData.Jingjieid.div(15).floor())
    else return new Decimal(2).pow(userData.Jingjieid.div(9).floor())},
    style(){if(userData.ppUpg.includes(22)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "x"+format(this.effect())},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(22)}
  },
  Upgrade23:{
    title(){return "狂风怒号:心魔"},
    effectDesc(){return "心魔效应基础+2且获取受到自协同的影响。"},
    cost(){return new Decimal(1e16)},
    effect(){return userData.Xinmo.add(1).root(8)},
    style(){if(userData.ppUpg.includes(23)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "x"+format(this.effect())},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(23)}
  },
  Upgrade24:{
    title(){return "七转心魔经"},
    effectDesc(){return "七转还阳经效果以降低的倍率提升心魔值获取。"},
    cost(){return new Decimal(1e22)},
    effect(){return prestige.GongfaS2effect().root(3.5)},
    style(){if(userData.ppUpg.includes(24)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "x"+format(this.effect())},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(24)}
  },
  Upgrade25:{
    title(){return "九转心魔经"},
    effectDesc(){return "九转还魂经效果+1且其等级同样加成心魔值获取。"},
    cost(){return new Decimal(2.5e23)},
    effect(){return new Decimal(2).pow(userData.GongfaS3Level)},
    style(){if(userData.ppUpg.includes(25)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "x"+format(this.effect())},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(25)}
  },
  Upgrade26:{
    title(){return "大数飞升之路"},
    effectDesc(){return "境界压制III的效果变为每9个小境界提升一次。"},
    cost(){return new Decimal(1e27)},
    effect(){return new Decimal(2).pow(userData.GongfaS3Level)},
    style(){if(userData.ppUpg.includes(26)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "15-->9(废话!)"},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(26)}
  },
  Upgrade27:{
    title(){return "维度提升"},
    effectDesc(){return "所有心魔升级等级提升2且弱化修为自协同的软上限。"},
    cost(){return new Decimal(1e30)},
    effect(){return new Decimal(2)},
    style(){if(userData.ppUpg.includes(27)) return {"background-color":"#00FF00","color":"#000000","height":"150px","width":"250px"}
  else if(userData.PrestigePoints.gte(this.cost())) return {"background-color":"#FFFF00","height":"150px","width":"250px"}
  else return {"background-color":"#bf8f8f","color":"#000000","height":"150px","width":"250px"}
}, 
   currently(){return "+2"},
   canAfford(){return userData.PrestigePoints.gte(this.cost())&&!userData.ppUpg.includes(27)}
  },
}
function Prestige()
{
  userData.PrestigePoints = userData.PrestigePoints.add(Zhuanshengpointsgain)
  userData.PrestigeTimes = userData.PrestigeTimes.add(1)
  if(userData.ppUpg.includes(21)) return
  if(!userData.ppUpg.includes(17))for(i = 1;i<11;i++)
  {
  userData["Gongfa"+i+"Level"] = new Decimal(0)
  }
  if(!userData.ppUpg.includes(15))for(i = 1;i<10;i++)
  {
  userData["Julingzhen"+i+"Level"] = new Decimal(0)
  }
  userData.totalLingqi = new Decimal(1000)
  userData.Lingqi = new Decimal(1000)
  if(!userData.ppUpg.includes(17))userData.Lingshi = new Decimal(0)
  userData.XiulianBalance = new Decimal(0)
  userData.Xiuwei = new Decimal(0)
  if(!userData.ppUpg.includes(16))userData.Jingjieid = new Decimal(0)
  else if(userData.ppUpg.includes(16)&&!userData.ppUpg.includes(18))userData.Jingjieid = userData.Jingjieid.mul(0.5).floor()
  else if(userData.ppUpg.includes(18)&&!userData.ppUpg.includes(20))userData.Jingjieid = userData.Jingjieid.mul(0.8).floor()
  else userData.Jingjieid = userData.Jingjieid.mul(0.9).floor()
  for(i=1;i<=10;i++)
    {
      GongfaHtml(i)
    }
    for(i=1;i<=9;i++)
    {
      JulingzhenHtml(i)
    }
    if(!userData.ppUpg.includes(19))document.getElementById("ShowUpgradeLevelS1").innerHTML = format(userData["GongfaS1Level"])
    if(!userData.ppUpg.includes(19))document.getElementById("ShowUpgradePriceS1").innerHTML = "价格"+format(prestige.GongfaS1cost())
    if(!userData.ppUpg.includes(19))document.getElementById("ShowUpgradeEffectS1").innerHTML = format(prestige.GongfaS1effect())+"x"
    if(!userData.ppUpg.includes(19))userData.GongfaS1Level = new Decimal(0)
    
  
}
function GongfaHtml(x)
{
  document.getElementById("ShowUpgradeLevel"+Number(x)).innerHTML = format(userData["Gongfa"+x+"Level"])
  document.getElementById("ShowUpgradePrice"+Number(x)).innerHTML = [Math.round(format(userData["Gongfa"+x+"Level"]))]>=(10)?"已臻圆满！":"价格"+format(strToVar("Gongfa"+x+"cost")[Math.round(format(userData["Gongfa"+x+"Level"]))])+" 灵气"
  document.getElementById("ShowUpgradeEffect"+Number(x)).innerHTML = format(strToVar("Gongfa"+x+"effect")[Math.round(format(userData["Gongfa"+x+"Level"]))])
}
function JulingzhenHtml(x)
{
  document.getElementById("ShowUpgradeLevel"+Number(x+20)).innerHTML = format(userData["Julingzhen"+x+"Level"])
  document.getElementById("ShowUpgradePrice"+Number(x+20)).innerHTML = [Math.round(format(userData["Julingzhen"+x+"Level"]))]>=(19)?"(已满级！)":format(strToVar("Julingzhen"+x+"cost")[Math.round(format(userData["Julingzhen"+x+"Level"]))])
  document.getElementById("ShowUpgradeEffect"+Number(x+20)).innerHTML = format(strToVar("Julingzhen"+x+"effect")[Math.round(format(userData["Julingzhen"+x+"Level"]))])
}
function JulingzhenEff(x)
{
  if(userData[""+"Julingzhen"+x+"Level"]>=(1)) userData[""+"Julingzhen"+x+"Freeze"] = userData[""+"Julingzhen"+x+"Freeze"].sub(0.05)
  if(userData[""+"Julingzhen"+x+"Freeze"]<(0.01)) userData.Lingshi = userData.Lingshi.add(strToVar(""+"Julingzhen"+x+"effect")[userData[""+"Julingzhen"+x+"Level"]].mul(ppEff).times(prestige.ppLingshiMult())),userData[""+"Julingzhen"+x+"Freeze"] = userData["Julingzhen"+x+"FreezeLimit"]
}
function strToVar(str) {
  var json = (new Function("return " + str))();
  return json;
}
//自动保存(5秒一次)
window.setInterval(() => {
    save()
}, 1000);
window.setInterval(() => {
  news()
  
}, 20000);

function upgrade(x)
{
  if(userData.Lingqi.gte(strToVar("Gongfa"+x+"cost")[userData["Gongfa"+x+"Level"]])&&((userData.Jingjieid>=(x*5-4))||x==1)&&!userData["Gongfa"+x+"Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(strToVar("Gongfa"+x+"cost")[userData["Gongfa"+x+"Level"]]),userData["Gongfa"+x+"Level"]=userData["Gongfa"+x+"Level"].add(userData.ppUpg.includes(14)?10:1)
  
    GongfaHtml(x)
}
function upgrade8()
{
    if(userData.Lingqi.gte(Gongfa8cost[userData.Gongfa8Level])&&userData.Jingjieid>=38&&!userData["Gongfa8Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa8cost[userData.Gongfa8Level]),userData["Gongfa8Level"]=userData["Gongfa8Level"].add(userData.ppUpg.includes(14)?10:1)
    
    GongfaHtml(8)
}
function upgrade9()
{
    if(userData.Lingqi.gte(Gongfa9cost[userData.Gongfa9Level])&&userData.Jingjieid>=46&&!userData["Gongfa9Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa9cost[userData.Gongfa9Level]),userData["Gongfa9Level"]=userData["Gongfa9Level"].add(userData.ppUpg.includes(14)?10:1)
    
    GongfaHtml(9)
}
function upgrade10()
{
    if(userData.Lingqi.gte(Gongfa10cost[userData.Gongfa10Level])&&userData.Jingjieid>=61&&!userData["Gongfa10Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa10cost[userData.Gongfa10Level]),userData["Gongfa10Level"]=userData["Gongfa10Level"].add(userData.ppUpg.includes(14)?10:1)
    
    GongfaHtml(10)
}
function upgrade11()
{
    if(userData.Lingqi.gte(Gongfa11cost[userData.Gongfa11Level])&&userData.Jingjieid>=76&&!userData["Gongfa11Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa11cost[userData.Gongfa11Level]),userData["Gongfa11Level"]++
    
    GongfaHtml(11)
}
function upgrade12()
{
    if(userData.Lingqi.gte(Gongfa12cost[userData.Gongfa12Level])&&userData.Jingjieid>=91&&!userData["Gongfa12Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa12cost[userData.Gongfa12Level]),userData["Gongfa12Level"]++
    
    GongfaHtml(12)
}
function upgrade13()
{
    if(userData.Lingqi.gte(Gongfa13cost[userData.Gongfa13Level])&&userData.Jingjieid>=106&&!userData["Gongfa13Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa13cost[userData.Gongfa13Level]),userData["Gongfa13Level"]++
    
    GongfaHtml(13)
}
function upgrade14()
{
    if(userData.Lingqi.gte(Gongfa14cost[userData.Gongfa14Level])&&userData.Jingjieid>=121&&!userData["Gongfa14Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa14cost[userData.Gongfa14Level]),userData["Gongfa14Level"]++
    
    GongfaHtml(14)
}
function upgrade15()
{
    if(userData.Lingqi.gte(Gongfa15cost[userData.Gongfa15Level])&&userData.Jingjieid>=151&&!userData["Gongfa15Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa15cost[userData.Gongfa15Level]),userData["Gongfa15Level"]++
    
    GongfaHtml(15)
}
function upgrade16()
{
    if(userData.Lingqi.gte(Gongfa16cost[userData.Gongfa16Level])&&userData.Jingjieid>=151&&!userData["Gongfa16Level"].gte(10))userData.Lingqi = userData.Lingqi.sub(Gongfa16cost[userData.Gongfa16Level]),userData["Gongfa16Level"]++
    
    GongfaHtml(16)
}
function upgradeS1()
{
    if(userData.Lingqi.gte(prestige.GongfaS1cost()))userData.Lingqi = userData.Lingqi.sub(prestige.GongfaS1cost()),userData.GongfaS1Level++
    document.getElementById("ShowUpgradeLevelS1").innerHTML = format(userData["GongfaS1Level"])
    document.getElementById("ShowUpgradePriceS1").innerHTML = "价格"+format(prestige.GongfaS1cost())
    document.getElementById("ShowUpgradeEffectS1").innerHTML = format(prestige.GongfaS1effect())+"x"
}
function upgradeS2()
{
    if(!confirm("你确定要升级这个功法吗？这将会强制进行一次转生！")) return
    if(userData.Lingqi.gte(prestige.GongfaS2cost()))userData.Lingqi = userData.Lingqi.sub(prestige.GongfaS2cost()),userData.GongfaS2Level++
    document.getElementById("ShowUpgradeLevelS2").innerHTML = format(userData["GongfaS2Level"])
    document.getElementById("ShowUpgradePriceS2").innerHTML = "价格"+format(prestige.GongfaS2cost())
    document.getElementById("ShowUpgradeEffectS2").innerHTML = format(prestige.GongfaS2effect())+"x"
    Prestige()
}
function upgradeS3()
{
    if(!confirm("你确定要升级这个功法吗？这将会重置上一个功法的等级并强制进行一次转生！")) return
    if(userData.GongfaS2Level.gte(prestige.GongfaS3cost())) userData.GongfaS3Level++
    userData.GongfaS2Level = new Decimal(0)
    document.getElementById("ShowUpgradeLevelS3").innerHTML = format(userData["GongfaS3Level"])
    document.getElementById("ShowUpgradePriceS3").innerHTML = "价格"+format(prestige.GongfaS3cost())
    document.getElementById("ShowUpgradeEffectS3").innerHTML = format(prestige.GongfaS3effect())+"x"
    Prestige()
}
function upgrade2(x)
{
  if(userData.Lingqi.gte(strToVar("Julingzhen"+x+"cost")[userData["Julingzhen"+x+"Level"]]))userData.Lingqi = userData.Lingqi.sub(strToVar("Julingzhen"+x+"cost")[userData["Julingzhen"+x+"Level"]]),userData["Julingzhen"+x+"Level"]++
    JulingzhenHtml(x)
}
function close0() {
    document.getElementById("option10").style.display = "none";
    document.getElementById("option20").style.display = "none";
    document.getElementById("option30").style.display = "none";
    document.getElementById("option40").style.display = "none";
}
function close3() {
  document.getElementById("option3_1").style.display = "none";
  document.getElementById("option3_2").style.display = "none";
  document.getElementById("option3_3").style.display = "none";
  document.getElementById("option3_4").style.display = "none";
  document.getElementById("option3_5").style.display = "none";
  document.getElementById("option3_6").style.display = "none";
  document.getElementById("option3_7").style.display = "none";
  document.getElementById("option3_8").style.display = "none";
  document.getElementById("option3_9").style.display = "none";
  document.getElementById("option3_10").style.display = "none";
  document.getElementById("option3_11").style.display = "none";
  document.getElementById("option3_12").style.display = "none";
}
function close4() {
  document.getElementById("option41").style.display = "none";
  document.getElementById("option42").style.display = "none";
  document.getElementById("option43").style.display = "none";
}

function option1() {
    close0();
    document.getElementById("option10").style.display = "block";
}
function option4() {
  close0();
  document.getElementById("option40").style.display = "block";
}
function option2Appear() {
    if(userData.totalLingqi.gte(10000))document.getElementById("option2").style.display = "block";
    else document.getElementById("option2").style.display = "none";
}
function option3Appear() {
    if(userData.Lingshi.gte(150))document.getElementById("option3").style.display = "block";
    else document.getElementById("option3").style.display = "none";
}
function option4Appear() {
  if(userData.Jingjieid.gte(40)||userData.PrestigeTimes.gte(1))document.getElementById("option4").style.display = "block";
  else document.getElementById("option4").style.display = "none";
}
function option3_2Appear() {
  if(userData.Jingjieid.gte(16))document.getElementById("option32").style.display = "block";
  else document.getElementById("option32").style.display = "none";
}
function option3_3Appear() {
  if(userData.Jingjieid.gte(31))document.getElementById("option33").style.display = "block";
  else document.getElementById("option33").style.display = "none";
}
function option3_4Appear() {
  if(userData.Jingjieid.gte(46))document.getElementById("option34").style.display = "block";
  else document.getElementById("option34").style.display = "none";
}
function option3_5Appear() {
  if(userData.Jingjieid.gte(61))document.getElementById("option35").style.display = "block";
  else document.getElementById("option35").style.display = "none";
}
function option3_6Appear() {
  if(userData.Jingjieid.gte(76))document.getElementById("option36").style.display = "block";
  else document.getElementById("option36").style.display = "none";
}
function option3_7Appear() {
  if(userData.Jingjieid.gte(91))document.getElementById("option37").style.display = "block";
  else document.getElementById("option37").style.display = "none";
}
function option3_8Appear() {
  if(userData.Jingjieid.gte(106))document.getElementById("option38").style.display = "block";
  else document.getElementById("option38").style.display = "none";
}
function option3_9Appear() {
  if(userData.Jingjieid.gte(121))document.getElementById("option39").style.display = "block";
  else document.getElementById("option39").style.display = "none";
}
function option3_10Appear() {
  if(userData.Jingjieid.gte(136))document.getElementById("option310").style.display = "block";
  else document.getElementById("option310").style.display = "none";
}
function option3_11Appear() {
  if(userData.Jingjieid.gte(151))document.getElementById("option311").style.display = "block";
  else document.getElementById("option311").style.display = "none";
}
function option3_12Appear() {
  if(userData.Jingjieid.gte(166))document.getElementById("option312").style.display = "block";
  else document.getElementById("option312").style.display = "none";
}
function option4_2Appear() {
  if(userData.PrestigePoints.gte(10)||userData.ppUpg.length>0)document.getElementById("option4_2").style.display = "block";
  else document.getElementById("option4_2").style.display = "none";
}
function option4_3Appear() {
  if(userData.totalXinmo.gte(1)||userData.ppUpg.length>10)document.getElementById("option4_3").style.display = "block";
  else document.getElementById("option4_3").style.display = "none";
}
function ZhujiAppear()
{
  if(userData.Jingjieid.gte(16))document.getElementById("Zhuji1").style.display = "block";
  else document.getElementById("Zhuji1").style.display = "none";
  if(userData.Jingjieid.gte(16))document.getElementById("Zhuji2").style.display = "block";
  else document.getElementById("Zhuji2").style.display = "none";
}
function KaiguangAppear()
{
  if(userData.Jingjieid.gte(31))document.getElementById("Kaiguang1").style.display = "block";
  else document.getElementById("Kaiguang1").style.display = "none";
  if(userData.Jingjieid.gte(31))document.getElementById("Kaiguang2").style.display = "block";
  else document.getElementById("Kaiguang2").style.display = "none";
}
function RongheAppear()
{
  if(userData.Jingjieid.gte(46))document.getElementById("Ronghe1").style.display = "block";
  else document.getElementById("Ronghe1").style.display = "none";
}
function XindongAppear()
{
  if(userData.Jingjieid.gte(61))document.getElementById("Xindong1").style.display = "block";
  else document.getElementById("Xindong1").style.display = "none";
}
function JindanAppear()
{
  if(userData.Jingjieid.gte(76))document.getElementById("Jindan1").style.display = "block";
  else document.getElementById("Jindan1").style.display = "none";
}
function YuanyingAppear()
{
  if(userData.Jingjieid.gte(91))document.getElementById("Yuanying1").style.display = "block";
  else document.getElementById("Yuanying1").style.display = "none";
}
function FenshenAppear()
{
  if(userData.Jingjieid.gte(106))document.getElementById("Fenshen1").style.display = "block";
  else document.getElementById("Fenshen1").style.display = "none";
}
function HetiAppear()
{
  if(userData.Jingjieid.gte(121))document.getElementById("Heti1").style.display = "block";
  else document.getElementById("Heti1").style.display = "none";
}
function DachengAppear()
{
  if(userData.Jingjieid.gte(151))document.getElementById("Dacheng1").style.display = "block";
  else document.getElementById("Dacheng1").style.display = "none";
}
function DujieAppear()
{
  if(userData.Jingjieid.gte(166))document.getElementById("Dujie1").style.display = "block";
  else document.getElementById("Dujie1").style.display = "none";
}
function Dujie2Appear()
{
  if(userData.Jingjieid.gte(173))document.getElementById("Dujie2").style.display = "block";
  else document.getElementById("Dujie2").style.display = "none";
}
function pp12Appear()
{
  if(userData.ppUpg.includes(12))document.getElementById("pp12").style.display = "block";
  else document.getElementById("pp12").style.display = "none";
}
function pp15Appear()
{
  if(userData.ppUpg.includes(15))document.getElementById("pp15").style.display = "block";
  else document.getElementById("pp15").style.display = "none";
}
function pp18Appear()
{
  if(userData.ppUpg.includes(18))document.getElementById("pp18").style.display = "block";
  else document.getElementById("pp18").style.display = "none";
}
function option2() {
    close0();
    document.getElementById("option20").style.display = "block";
}
function option3() {
    close0();
    document.getElementById("option30").style.display = "block";
    if(parseInt((format(userData.Jingjieid)))<15.5) option3_1()
        else if(parseInt((format(userData.Jingjieid)))<30.5) option3_2()
        else if(parseInt((format(userData.Jingjieid)))<45.5) option3_3()
        else if(parseInt((format(userData.Jingjieid)))<60.5) option3_4()
        else option3_5()
    
}
function option3_1() {
  close3();
  document.getElementById("option3_1").style.display = "block";
}
function option3_2() {
  close3();
  document.getElementById("option3_2").style.display = "block";
}
function option3_3() {
  close3();
  document.getElementById("option3_3").style.display = "block";
}
function option3_4() {
  close3();
  document.getElementById("option3_4").style.display = "block";
}
function option3_5() {
  close3();
  document.getElementById("option3_5").style.display = "block";
}
function option3_6() {
  close3();
  document.getElementById("option3_6").style.display = "block";
}
function option3_7() {
  close3();
  document.getElementById("option3_7").style.display = "block";
}
function option3_8() {
  close3();
  document.getElementById("option3_8").style.display = "block";
}
function option3_9() {
  close3();
  document.getElementById("option3_9").style.display = "block";
}
function option3_10() {
  close3();
  document.getElementById("option3_10").style.display = "block";
}
function option3_11() {
  close3();
  document.getElementById("option3_11").style.display = "block";
}
function option3_12() {
  close3();
  document.getElementById("option3_12").style.display = "block";
}
function option4_1() {
  close4();
  document.getElementById("option41").style.display = "block";
}
function option4_2() {
  close4();
  document.getElementById("option42").style.display = "block";
}
function option4_3() {
  close4();
  document.getElementById("option43").style.display = "block";
}

function move(x) {
  var elem = document.getElementById("myBar"+x);   
      elem.style.width = format(format(userData["Julingzhen"+x+"FreezeLimit"].sub(userData["Julingzhen"+x+"Freeze"]).div(userData["Julingzhen"+x+"FreezeLimit"]))*100) + '%'; 
      elem.innerHTML = format(format(userData["Julingzhen"+x+"FreezeLimit"].sub(userData["Julingzhen"+x+"Freeze"]).div(userData["Julingzhen"+x+"FreezeLimit"])) * 100)  + '%';
      if(x<4)elem.style.backgroundColor = "#000000";
      else if(3<x&&x<7) elem.style.backgroundColor = "#009600";
      else if(6<x&&x<9)elem.style.backgroundColor = "#0000FF";
      else elem.style.backgroundColor = "#8800FF";
    }
                      
  function JingjieFormat() {
    var elem = document.getElementById("XiuweiBar");   
        elem.style.width = format(userData.Xiuwei.div(JingjieLimit[userData.Jingjieid]))*70+30 + '%'; 
        if(parseInt((format(userData.Jingjieid)))<15.5) document.getElementById("XiuweiBar").style.backgroundColor = "#000000",document.getElementById("XiuweiBar").style.color = "#FFFFFF"
        else if(parseInt((format(userData.Jingjieid)))<30.5) document.getElementById("XiuweiBar").style.backgroundColor = "#009600",document.getElementById("XiuweiBar").style.color = "#FFFFFF"
        else if(parseInt((format(userData.Jingjieid)))<45.5) document.getElementById("XiuweiBar").style.backgroundColor = "#0000FF",document.getElementById("XiuweiBar").style.color = "#FFFFFF"
        else if(parseInt((format(userData.Jingjieid)))<60.5) document.getElementById("XiuweiBar").style.backgroundColor = "#8800FF",document.getElementById("XiuweiBar").style.color = "#FFFFFF"
        else if(parseInt((format(userData.Jingjieid)))<75.5) document.getElementById("XiuweiBar").style.backgroundColor = "#FF8800",document.getElementById("XiuweiBar").style.color = "#FFFFFF"
        else if(parseInt((format(userData.Jingjieid)))<90.5) document.getElementById("XiuweiBar").style.backgroundColor = "#FFAA00",document.getElementById("XiuweiBar").style.color = "#FFFFFF"
        else if(parseInt((format(userData.Jingjieid)))<120.5) document.getElementById("XiuweiBar").style.backgroundColor = "#FF0000",document.getElementById("XiuweiBar").style.color = "#FFFFFF"
        else if(parseInt((format(userData.Jingjieid)))<150.5) document.getElementById("XiuweiBar").style.backgroundColor = "#00DDFF",document.getElementById("XiuweiBar").style.color = "#000000"
        else if(parseInt((format(userData.Jingjieid)))<190.5) document.getElementById("XiuweiBar").style.backgroundColor = "#000066",document.getElementById("XiuweiBar").style.color = "#FFFFFF"
        elem.innerHTML = "当前境界："+userData.Jingjie+"(下阶所需"+format(userData.Xiuwei)+" / "+format(JingjieLimit[userData.Jingjieid])+"修为)";
        if(!userData.Xiuwei.gte(1e130))document.body.style.boxShadow = "#000000 0px 0px 0px inset";
        else if(userData.Xiuwei.gte(1e130))document.body.style.boxShadow = "#000000 0px 0px "+format((userData.Xiuwei.div(1e130).max(0).add(1).log10()).div(170).mul(100))+"px inset";
        document.body.style.backgroundColor = "rgb("+(255-format((userData.Xiuwei.div(1e130).max(0).add(1).log10()).div(180).mul(255).max(0)))+","+(255-format((userData.Xiuwei.div(1e130).max(0).add(1).log10()).div(180).mul(255).max(0)))+","+(255-format((userData.Xiuwei.div(1e130).max(0).add(1).log10()).div(180).mul(255).max(0)))+")"
        if(userData.Jingjieid>180.5)close0(),document.getElementById("box").style.display="block",document.getElementById("XiuweiBar").style.display="none",document.getElementById("XiuweiProgress").style.display="none",document.getElementById("main").style.display="none"
        else document.getElementById("box").style.display="none",document.getElementById("XiuweiBar").style.display="block",document.getElementById("XiuweiProgress").style.display="block",document.getElementById("main").style.display="block"
        
    }

function hint()
{
    if(userData.totalLingqi.lt(10000)&&!userData.PrestigeTimes.gte(1)) document.getElementById("hint").innerHTML = "总共获得10000灵气以解锁聚灵阵。("+format(userData.totalLingqi.div(10000).mul(100).min(100))+"%)"
    else if(userData.Lingshi.lt(150)&&!userData.PrestigeTimes.gte(1))document.getElementById("hint").innerHTML = "到达150灵石以解锁练功房。("+format(userData.Lingshi.div(150).mul(100).min(100))+"%)"
    else if(userData.Jingjieid.lt(16)&&!userData.PrestigeTimes.gte(1))document.getElementById("hint").innerHTML = "境界到达筑基境可解锁更多练功房与功法选项。("+format(userData.Jingjieid.div(16).mul(100).min(100))+"%)"
    else if(userData.Jingjieid.lt(31)&&!userData.PrestigeTimes.gte(1))document.getElementById("hint").innerHTML = "境界到达开光境可解锁更多练功房与功法选项。("+format(userData.Jingjieid.div(31).mul(100).min(100))+"%)"
    else if(userData.Jingjieid.lt(40)&&!userData.PrestigeTimes.gte(1))document.getElementById("hint").innerHTML = "境界到达开光10阶可解锁转生。("+format(userData.Jingjieid.div(40).mul(100).min(100))+"%)"
    else if(userData.PrestigePoints.lt(1000))document.getElementById("hint").innerHTML = "到达10转生点数可解锁转生升级。("+format(userData.PrestigePoints.div(10).mul(100).min(100))+"%)"
    else if(!userData.ppUpg.includes(21))document.getElementById("hint").innerHTML = "拥有11个转生升级可解锁心魔。("+format(userData.PrestigePoints.div(11).mul(100).min(100))+"%)"
    else document.getElementById("hint").innerHTML = "尝试精进自己的修为,直到飞升到下一个位面..."
}
// 字幕滚动变量

function Xiulian(x)
{
    if(userData.Lingshi.gte(XiulianCost[x]))userData.XiulianBalance = new Decimal(15),userData.XiuweiPerSec = XiulianEffect[x].mul(ppEff),userData.Lingshi = userData.Lingshi.sub(XiulianCost[x])
}
function getAchievement() {
  document.getElementById("getAchievement").style.cssText = "opacity: 0.1";
    document.getElementById("getAchievement").style.display = "block";
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.2';",50)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.3';",100)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.4';",150)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.5';",200)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.6';",250)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.7';",300)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.8';",350)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.9';",400)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 1.0';",450)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.9';",2200)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.8';",2250)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.7';",2300)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.6';",2350)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.5';",2400)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.4';",2450)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.3';",2500)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.2';",2550)
    setTimeout("document.getElementById('getAchievement').style.cssText = 'opacity: 0.1';",2600)
    setTimeout("document.getElementById('getAchievement').style.display = 'none';",2650)
}